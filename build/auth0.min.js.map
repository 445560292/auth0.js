{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///auth0.min.js","webpack:///webpack/bootstrap 14e71692ff47a5cb413c","webpack:///./src/index.js","webpack:///./~/url-join/lib/url-join.js","webpack:///./src/helper/assert.js","webpack:///./src/helper/object.js","webpack:///./src/helper/response-handler.js","webpack:///./src/helper/window.js","webpack:///./src/helper/qs.js","webpack:///./src/helper/request-builder.js","webpack:///./~/superagent/lib/is-object.js","webpack:///./src/authentication/index.js","webpack:///./src/helper/base64_url.js","webpack:///./~/Base64/base64.js","webpack:///./~/component-emitter/index.js","webpack:///./~/superagent/lib/client.js","webpack:///./~/superagent/lib/request-base.js","webpack:///./~/superagent/lib/request.js","webpack:///./src/authentication/db-connection.js","webpack:///./src/authentication/passwordless-authentication.js","webpack:///./src/helper/error.js","webpack:///./src/helper/iframe-handler.js","webpack:///./src/helper/information.js","webpack:///./src/helper/jwt.js","webpack:///./src/management/index.js","webpack:///./src/version.js","webpack:///./src/web-auth/index.js","webpack:///./src/web-auth/redirect.js","webpack:///./src/web-auth/silent-authentication-handler.js","webpack:///./src/web-auth/username-password.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Authentication","Management","WebAuth","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","name","context","definition","undefined","normalize","str","options","replace","input","arguments","joined","slice","join","attribute","o","attr","type","text","Error","variable","value","values","indexOf","check","config","attributes","optional","message","Object","keys","forEach","a","condition","value_message","isArray","array","supportsIsArray","Array","toString","prototype","pick","object","reduce","prev","key","extend","params","from","unshift","assign","apply","merge","base","with","object2","keys2","blacklist","blacklistedKeys","camelToSnake","code","newKey","index","wasPrevNumber","wasPrevUppercase","length","charCodeAt","toLowerCase","toSnakeCase","exceptions","wrapCallback","cb","err","data","original","response","statusCode","status_code","statusText","status_text","body","error","error_code","description","error_description","global","redirect","url","window","location","getDocument","document","getWindow","build","arr","push","encodeURIComponent","parse","qs","split","curr","param","RequestWrapper","req","request","method","_data","headers","_header","RequestObj","RequestBuilder","_sendTelemetry","_telemetryInfo","base64Url","version","abort","getMethod","getBody","getUrl","getHeaders","set","send","end","setCommonConfiguration","ongoingRequest","header","getTelemetryData","clientInfo","raw","jsonClientInfo","JSON","stringify","encode","get","post","patch","isObject","obj","assert","domain","clientID","responseType","redirectUri","scope","audience","baseOptions","rootUrl","passwordless","PasswordlessAuthentication","dbConnection","DBConnection","urljoin","objectHelper","responseHandler","buildAuthorizeUrl","qString","auth0Client","buildLogoutUrl","login","username","password","grantType","oauthToken","grant_type","loginWithResourceOwner","connection","userInfo","accessToken","delegation","Base64","btoa","decode","atob","chars","INVALID_CHARACTER_ERR","createElement","block","charCode","idx","map","output","charAt","bs","buffer","bc","String","fromCharCode","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","callbacks","i","splice","emit","args","len","listeners","hasListeners","noop","serialize","pairs","pushEncodedKeyValuePair","val","v","subkey","parseString","pair","pos","decodeURIComponent","parseHeader","line","field","lines","fields","pop","trim","isJSON","mime","test","shift","parts","Response","xhr","responseText","_setStatusProperties","status","getAllResponseHeaders","getResponseHeader","_setHeaderProperties","_parseBody","Request","self","_query","res","e","rawResponse","callback","new_err","del","console","warn","requestBase","bind","getXHR","XMLHttpRequest","protocol","ActiveXObject","s","serializeObject","types","html","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","ct","statusType","info","ok","clientError","serverError","toError","accepted","noContent","badRequest","unauthorized","notAcceptable","notFound","forbidden","msg","_responseType","accept","auth","user","pass","query","attach","file","filename","_getFormData","append","_formData","FormData","_callback","clearTimeout","crossDomainError","crossDomain","_timeoutError","timeout","_timeout","_appendQueryString","onreadystatechange","readyState","timedout","_aborted","handleProgress","direction","total","percent","onprogress","upload","_timer","setTimeout","open","_withCredentials","withCredentials","_isHost","contentType","_serializer","setRequestHeader","head","put","_parser","ms","then","resolve","reject","_fullfilledPromise","Promise","innerResolve","innerReject","catch","use","getHeader","unset","redirects","n","_maxRedirects","toJSON","RequestConstructor","signup","email","changePassword","buildVerifyUrl","verificationCode","phoneNumber","required","start","cleanOption","verify","buildResponse","invalidJwt","IframeHandler","auth0","timeoutCallback","usePostMessage","iframe","timeoutHandle","_destroyTimeout","transientMessageEventListener","transientEventListener","windowHelper","init","_this","_window","style","display","src","messageEventListener","loadEventListener","appendChild","timeoutHandler","destroy","callbackHandler","result","parseHash","contentWindow","hash","removeChild","getPayload","jwt","encoded","token","Authorization","getUser","userId","patchUserMetadata","userMetadata","user_metadata","linkUser","secondaryUserToken","link_with","tenant","client","Redirect","SilentAuthenticationHandler","parsedQs","prof","audiences","hashStr","hasOwnProperty","state","id_token","aud","iss","access_token","idToken","idTokenPayload","refreshToken","refresh_token","renewAuth","handler","prompt","passwordlessStart","logout","passwordlessVerify","UsernamePassword","usernamePassword","signupAndLogin","authenticationUrl","information","formHtml","div","_document","innerHTML","children","submit"],"mappings":"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","file":"auth0.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"auth0-js\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"auth0-js\"] = factory();\n\telse\n\t\troot[\"auth0\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"auth0-js\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"auth0-js\"] = factory();\n\telse\n\t\troot[\"auth0\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Authentication = __webpack_require__(9);\n\tvar Management = __webpack_require__(22);\n\tvar WebAuth = __webpack_require__(24);\n\t\n\tmodule.exports = {\n\t  Authentication: Authentication,\n\t  Management: Management,\n\t  WebAuth: WebAuth\n\t};\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (name, context, definition) {\n\t  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n\t  else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  else context[name] = definition();\n\t})('urljoin', this, function () {\n\t\n\t  function normalize (str, options) {\n\t\n\t    // make sure protocol is followed by two slashes\n\t    str = str.replace(/:\\//g, '://');\n\t\n\t    // remove consecutive slashes\n\t    str = str.replace(/([^:\\s])\\/+/g, '$1/');\n\t\n\t    // remove trailing slash before parameters or hash\n\t    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\t\n\t    // replace ? in parameters with &\n\t    str = str.replace(/(\\?.+)\\?/g, '$1&');\n\t\n\t    return str;\n\t  }\n\t\n\t  return function () {\n\t    var input = arguments;\n\t    var options = {};\n\t\n\t    if (typeof arguments[0] === 'object') {\n\t      // new syntax with array and options\n\t      input = arguments[0];\n\t      options = arguments[1] || {};\n\t    }\n\t\n\t    var joined = [].slice.call(input, 0).join('/');\n\t    return normalize(joined, options);\n\t  };\n\t\n\t});\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tvar toString = Object.prototype.toString;\n\t\n\tfunction attribute(o, attr, type, text) {\n\t  if (o && typeof o[attr] !== type) {\n\t    throw new Error(text);\n\t  }\n\t}\n\t\n\tfunction variable(o, type, text) {\n\t  if (typeof o !== type) {\n\t    throw new Error(text);\n\t  }\n\t}\n\t\n\tfunction value(o, values, text) {\n\t  if (values.indexOf(o) === -1) {\n\t    throw new Error(text);\n\t  }\n\t}\n\t\n\tfunction check(o, config, attributes) {\n\t  if (!config.optional || o) {\n\t    variable(o, config.type, config.message);\n\t  }\n\t  if (config.type === 'object' && attributes) {\n\t    Object.keys(attributes).forEach(function (a) { // eslint-disable-line\n\t      if (!attributes[a].optional || o[a]) {\n\t        if (!attributes[a].condition || attributes[a].condition(o)) {\n\t          attribute(o, a, attributes[a].type, attributes[a].message);\n\t          if (attributes[a].values) {\n\t            value(o[a], attributes[a].values, attributes[a].value_message);\n\t          }\n\t        }\n\t      }\n\t    });\n\t  }\n\t}\n\t\n\t/**\n\t * Wrap `Array.isArray` Polyfill for IE9\n\t * source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\n\t *\n\t * @param {Array} array\n\t * @public\n\t */\n\tfunction isArray(array) {\n\t  if (this.supportsIsArray()) {\n\t    return Array.isArray(array);\n\t  }\n\t\n\t  return toString.call(array) === '[object Array]';\n\t}\n\t\n\tfunction supportsIsArray() {\n\t  return (Array.isArray != null);\n\t}\n\t\n\tmodule.exports = {\n\t  check: check,\n\t  attribute: attribute,\n\t  variable: variable,\n\t  value: value,\n\t  isArray: isArray,\n\t  supportsIsArray: supportsIsArray\n\t};\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t/* eslint-disable no-param-reassign */\n\t\n\tfunction pick(object, keys) {\n\t  return keys.reduce(function (prev, key) {\n\t    if (object[key]) {\n\t      prev[key] = object[key];\n\t    }\n\t    return prev;\n\t  }, {});\n\t}\n\t\n\tfunction extend() {\n\t  var params = Array.from(arguments);\n\t  params.unshift({});\n\t  return Object.assign.apply(undefined, params);\n\t}\n\t\n\tfunction merge(object, keys) {\n\t  return {\n\t    base: keys ? pick(object, keys) : object,\n\t    with: function (object2, keys2) {\n\t      object2 = keys2 ? pick(object2, keys2) : object2;\n\t      return extend(this.base, object2);\n\t    }\n\t  };\n\t}\n\t\n\tfunction blacklist(object, blacklistedKeys) {\n\t  return Object.keys(object).reduce(function (p, key) {\n\t    if (blacklistedKeys.indexOf(key) === -1) {\n\t      p[key] = object[key];\n\t    }\n\t    return p;\n\t  }, {});\n\t}\n\t\n\tfunction camelToSnake(str) {\n\t  var newKey = '';\n\t  var index = 0;\n\t  var code;\n\t  var wasPrevNumber = true;\n\t  var wasPrevUppercase = true;\n\t\n\t  while (index < str.length) {\n\t    code = str.charCodeAt(index);\n\t    if ((!wasPrevUppercase && code >= 65 && code <= 90) || (!wasPrevNumber && code >= 48 && code <= 57)) {\n\t      newKey += '_';\n\t      newKey += str[index].toLowerCase();\n\t    } else {\n\t      newKey += str[index].toLowerCase();\n\t    }\n\t    wasPrevNumber = (code >= 48 && code <= 57);\n\t    wasPrevUppercase = (code >= 65 && code <= 90);\n\t    index++;\n\t  }\n\t\n\t  return newKey;\n\t}\n\t\n\tfunction toSnakeCase(object, exceptions) {\n\t  exceptions = exceptions || [];\n\t\n\t  return Object.keys(object).reduce(function (p, key) {\n\t    var newKey = exceptions.indexOf(key) === -1 ? camelToSnake(key) : key;\n\t    p[newKey] = object[key];\n\t    return p;\n\t  }, {});\n\t}\n\t\n\tmodule.exports = {\n\t  toSnakeCase: toSnakeCase,\n\t  blacklist: blacklist,\n\t  merge: merge,\n\t  pick: pick,\n\t  extend: extend\n\t};\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tfunction wrapCallback(cb) {\n\t  return function (err, data) {\n\t\n\t    if (err) {\n\t      var data = {\n\t        original: err\n\t      };\n\t\n\t      if (err.response && err.response.statusCode) {\n\t        data.status_code = err.response.statusCode;\n\t      }\n\t\n\t      if (err.response && err.response.statusText) {\n\t        data.status_text = err.response.statusText;\n\t      }\n\t\n\t      if (err.response && err.response.body) {\n\t        err = err.response.body;\n\t      }\n\t\n\t      data.code = err.error || err.code || err.error_code || null;\n\t      data.description = err.error_description || err.description || err.error || null;\n\t      data.name = err.name || null;\n\t\n\t      return cb(data);\n\t    }\n\t\n\t    return cb(null, data.body || data.text);\n\t  };\n\t}\n\t\n\tmodule.exports = wrapCallback;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {function redirect(url) {\n\t  global.window.location = url;\n\t}\n\t\n\tfunction getDocument() {\n\t  return global.window.document;\n\t}\n\t\n\tfunction getWindow() {\n\t  return global.window;\n\t}\n\t\n\tmodule.exports = {\n\t  redirect: redirect,\n\t  getDocument: getDocument,\n\t  getWindow: getWindow,\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tfunction build(params) {\n\t  return Object.keys(params).reduce(function (arr, key) {\n\t    if (typeof params[key] !== 'undefined') {\n\t      arr.push(key + '=' + encodeURIComponent(params[key]));\n\t    }\n\t    return arr;\n\t  }, []).join('&');\n\t}\n\t\n\tfunction parse(qs) {\n\t  return qs.split('&').reduce(function (prev, curr) {\n\t    var param = curr.split('=');\n\t    prev[param[0]] = param[1];\n\t    return prev;\n\t  }, {});\n\t}\n\t\n\tmodule.exports = {\n\t  build: build,\n\t  parse: parse\n\t};\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* eslint-disable no-param-reassign */\n\tvar request = __webpack_require__(13);\n\tvar base64Url = __webpack_require__(10);\n\tvar version = __webpack_require__(23);\n\t\n\t// ------------------------------------------------ RequestWrapper\n\t\n\tfunction RequestWrapper(req) {\n\t  this.request = req;\n\t  this.method = req.method;\n\t  this.url = req.url;\n\t  this.body = req._data;\n\t  this.headers = req._header;\n\t}\n\t\n\tRequestWrapper.prototype.abort = function () {\n\t  this.request.abort();\n\t};\n\t\n\tRequestWrapper.prototype.getMethod = function () {\n\t  return this.method;\n\t};\n\t\n\tRequestWrapper.prototype.getBody = function () {\n\t  return this.body;\n\t};\n\t\n\tRequestWrapper.prototype.getUrl = function () {\n\t  return this.url;\n\t};\n\t\n\tRequestWrapper.prototype.getHeaders = function () {\n\t  return this.headers;\n\t};\n\t\n\t// ------------------------------------------------ RequestObj\n\t\n\tfunction RequestObj(req) {\n\t  this.request = req;\n\t}\n\t\n\tRequestObj.prototype.set = function (key, value) {\n\t  this.request = this.request.set(key, value);\n\t  return this;\n\t};\n\t\n\tRequestObj.prototype.send = function (body) {\n\t  this.request = this.request.send(body);\n\t  return this;\n\t};\n\t\n\tRequestObj.prototype.end = function (cb) {\n\t  this.request = this.request.end(cb);\n\t  return new RequestWrapper(this.request);\n\t};\n\t\n\t// ------------------------------------------------ RequestBuilder\n\t\n\tfunction RequestBuilder(options) {\n\t  this._sendTelemetry = options._sendTelemetry === false ? options._sendTelemetry : true;\n\t  this._telemetryInfo = options._telemetryInfo || null;\n\t  this.headers = options.headers || {};\n\t}\n\t\n\tRequestBuilder.prototype.setCommonConfiguration = function (ongoingRequest) {\n\t  var headers = this.headers;\n\t  ongoingRequest = ongoingRequest.set('Content-Type', 'application/json');\n\t  Object.keys(this.headers).forEach(function (header) {\n\t    ongoingRequest = ongoingRequest.set(header, headers[header]);\n\t  });\n\t  if (this._sendTelemetry) {\n\t    ongoingRequest = ongoingRequest.set('Auth0-Client', this.getTelemetryData());\n\t  }\n\t  return ongoingRequest;\n\t};\n\t\n\tRequestBuilder.prototype.getTelemetryData = function () {\n\t  var clientInfo = this._telemetryInfo || { name: 'auth0.js', version: version.raw };\n\t  var jsonClientInfo = JSON.stringify(clientInfo);\n\t  return base64Url.encode(jsonClientInfo);\n\t};\n\t\n\tRequestBuilder.prototype.get = function (url) {\n\t  return new RequestObj(this.setCommonConfiguration(request.get(url)));\n\t};\n\t\n\tRequestBuilder.prototype.post = function (url) {\n\t  return new RequestObj(this.setCommonConfiguration(request.post(url)));\n\t};\n\t\n\tRequestBuilder.prototype.patch = function (url) {\n\t  return new RequestObj(this.setCommonConfiguration(request.patch(url)));\n\t};\n\t\n\tmodule.exports = RequestBuilder;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Check if `obj` is an object.\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return null !== obj && 'object' === typeof obj;\n\t}\n\t\n\tmodule.exports = isObject;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar urljoin = __webpack_require__(1);\n\t\n\tvar RequestBuilder = __webpack_require__(7);\n\tvar qs = __webpack_require__(6);\n\tvar objectHelper = __webpack_require__(3);\n\tvar assert = __webpack_require__(2);\n\tvar responseHandler = __webpack_require__(4);\n\t\n\tvar PasswordlessAuthentication = __webpack_require__(17);\n\tvar DBConnection = __webpack_require__(16);\n\t\n\tfunction Authentication(options) {\n\t  /* eslint-disable */\n\t  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n\t    domain: { type: 'string', message: 'domain option is required' },\n\t    clientID: { type: 'string', message: 'clientID option is required' },\n\t    responseType: { optional: true, type: 'string', message: 'responseType is not valid' },\n\t    redirectUri: { optional: true, type: 'string', message: 'redirectUri is not valid' },\n\t    scope: { optional: true, type: 'string', message: 'scope is not valid' },\n\t    audience: { optional: true, type: 'string', message: 'audience is not valid' },\n\t    _sendTelemetry: { optional: true, type: 'boolean', message: '_sendTelemetry option is not valid' },\n\t    _telemetryInfo: { optional: true, type: 'object', message: '_telemetryInfo option is not valid' }\n\t  });\n\t  /* eslint-enable */\n\t\n\t  this.baseOptions = options;\n\t\n\t  this.baseOptions._sendTelemetry = this.baseOptions._sendTelemetry === false ?\n\t                                        this.baseOptions._sendTelemetry : true;\n\t\n\t  this.baseOptions.rootUrl = 'https://' + this.baseOptions.domain;\n\t\n\t  this.request = new RequestBuilder(this.baseOptions);\n\t\n\t  this.passwordless = new PasswordlessAuthentication(this.request, this.baseOptions);\n\t  this.dbConnection = new DBConnection(this.request, this.baseOptions);\n\t}\n\t\n\tAuthentication.prototype.buildAuthorizeUrl = function (options) {\n\t  var params;\n\t  var qString;\n\t\n\t  assert.check(options, {\n\t    optional: true,\n\t    type: 'object',\n\t    message: 'options parameter is not valid'\n\t  });\n\t\n\t  params = objectHelper.merge(this.baseOptions, [\n\t    'clientID',\n\t    'responseType',\n\t    'redirectUri',\n\t    'scope',\n\t    'audience'\n\t  ]).with(options || {});\n\t\n\t  // eslint-disable-next-line\n\t  if (this.baseOptions._sendTelemetry) {\n\t    params.auth0Client = this.request.getTelemetryData();\n\t  }\n\t\n\t  params = objectHelper.toSnakeCase(params, ['auth0Client']);\n\t\n\t  qString = qs.build(params);\n\t\n\t  return urljoin(this.baseOptions.rootUrl, 'authorize', '?' + qString);\n\t};\n\t\n\tAuthentication.prototype.buildLogoutUrl = function (options) {\n\t  var params;\n\t  var qString;\n\t\n\t  assert.check(options, {\n\t    optional: true,\n\t    type: 'object',\n\t    message: 'options parameter is not valid'\n\t  });\n\t\n\t  params = objectHelper.merge(this.baseOptions, ['clientID'])\n\t                .with(options || {});\n\t\n\t  // eslint-disable-next-line\n\t  if (this.baseOptions._sendTelemetry) {\n\t    params.auth0Client = this.request.getTelemetryData();\n\t  }\n\t\n\t  params = objectHelper.toSnakeCase(params, ['auth0Client', 'returnTo']);\n\t\n\t  qString = qs.build(params);\n\t\n\t  return urljoin(this.baseOptions.rootUrl, 'v2', 'logout', '?' + qString);\n\t};\n\t\n\tAuthentication.prototype.login = function (options, cb) {\n\t  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n\t    clientID: { optional: true, type: 'string', message: 'clientID option is required' },\n\t    username: { optional: true, type: 'string', message: 'username option is required' },\n\t    password: { optional: true, type: 'string', message: 'password option is required' },\n\t    scope: { optional: true, type: 'string', message: 'scope option is required' },\n\t    audience: { optional: true, type: 'string', message: 'audience option is required' }\n\t  });\n\t  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\t\n\t  options.grantType = 'password';\n\t\n\t  return this.oauthToken(options, cb);\n\t};\n\t\n\tAuthentication.prototype.oauthToken = function (options, cb) {\n\t  var url;\n\t  var body;\n\t\n\t  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n\t    grantType: { optional: true, type: 'string', message: 'grantType option is required' }\n\t  });\n\t  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\t\n\t  url = urljoin(this.baseOptions.rootUrl, 'oauth', 'token');\n\t\n\t  body = objectHelper.merge(this.baseOptions, [\n\t    'clientID',\n\t    'scope',\n\t    'audience'\n\t  ]).with(options);\n\t\n\t  body = objectHelper.toSnakeCase(body, ['auth0Client']);\n\t\n\t  body.grant_type = body.grant_type || 'password';\n\t\n\t  return this.request\n\t    .post(url)\n\t    .send(body)\n\t    .end(responseHandler(cb));\n\t};\n\t\n\tAuthentication.prototype.loginWithResourceOwner = function (options, cb) {\n\t  var url;\n\t  var body;\n\t\n\t  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n\t    username: { type: 'string', message: 'username option is required' },\n\t    password: { type: 'string', message: 'password option is required' },\n\t    connection: { type: 'string', message: 'connection option is required' },\n\t    scope: { optional: true, type: 'string', message: 'scope option is required' },\n\t    audience: { optional: true, type: 'string', message: 'audience option is required' }\n\t  });\n\t  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\t\n\t  url = urljoin(this.baseOptions.rootUrl, 'oauth', 'ro');\n\t\n\t  body = objectHelper.merge(this.baseOptions, [\n\t    'clientID',\n\t    'scope',\n\t    'audience'\n\t  ]).with(options);\n\t\n\t  body = objectHelper.toSnakeCase(body, ['auth0Client']);\n\t\n\t  body.grant_type = body.grant_type || 'password';\n\t\n\t  return this.request\n\t    .post(url)\n\t    .send(body)\n\t    .end(responseHandler(cb));\n\t};\n\t\n\tAuthentication.prototype.userInfo = function (accessToken, cb) {\n\t  var url;\n\t\n\t  assert.check(accessToken, { type: 'string', message: 'accessToken parameter is not valid' });\n\t  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\t\n\t  url = urljoin(this.baseOptions.rootUrl, 'userinfo');\n\t\n\t  return this.request\n\t    .get(url)\n\t    .set('Authorization', 'Bearer ' + accessToken)\n\t    .end(responseHandler(cb));\n\t};\n\t\n\tAuthentication.prototype.delegation = function (options, cb) {\n\t  var url;\n\t  var body;\n\t\n\t  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n\t    grant_type: { type: 'string', message: 'grant_type option is required' }\n\t  });\n\t  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\t\n\t  url = urljoin(this.baseOptions.rootUrl, 'delegation');\n\t\n\t  body = objectHelper.merge(this.baseOptions, ['clientID'])\n\t                .with(options);\n\t\n\t  body = objectHelper.toSnakeCase(body, ['auth0Client']);\n\t\n\t  return this.request\n\t    .post(url)\n\t    .send(body)\n\t    .end(responseHandler(cb));\n\t};\n\t\n\tmodule.exports = Authentication;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Base64 = __webpack_require__(11);\n\t\n\tfunction encode(str) {\n\t  return Base64.btoa(str)\n\t      .replace(/\\+/g, '-') // Convert '+' to '-'\n\t      .replace(/\\//g, '_') // Convert '/' to '_'\n\t      .replace(/=+$/, ''); // Remove ending '='\n\t}\n\t\n\t\n\tfunction decode(str) {\n\t  // Add removed at end '='\n\t  str += Array(5 - str.length % 4).join('=');\n\t\n\t  str = str\n\t    .replace(/\\-/g, '+') // Convert '-' to '+'\n\t    .replace(/_/g, '/'); // Convert '_' to '/'\n\t\n\t  return Base64.atob(str);\n\t}\n\t\n\tmodule.exports = {\n\t  encode: encode,\n\t  decode: decode\n\t};\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function () {\n\t\n\t  var\n\t    object =  true ? exports : this, // #8: web workers\n\t    chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n\t    INVALID_CHARACTER_ERR = (function () {\n\t      // fabricate a suitable error object\n\t      try { document.createElement('$'); }\n\t      catch (error) { return error; }}());\n\t\n\t  // encoder\n\t  // [https://gist.github.com/999166] by [https://github.com/nignag]\n\t  object.btoa || (\n\t  object.btoa = function (input) {\n\t    for (\n\t      // initialize result and counter\n\t      var block, charCode, idx = 0, map = chars, output = '';\n\t      // if the next input index does not exist:\n\t      //   change the mapping table to \"=\"\n\t      //   check if d has no fractional digits\n\t      input.charAt(idx | 0) || (map = '=', idx % 1);\n\t      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n\t      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n\t    ) {\n\t      charCode = input.charCodeAt(idx += 3/4);\n\t      if (charCode > 0xFF) throw INVALID_CHARACTER_ERR;\n\t      block = block << 8 | charCode;\n\t    }\n\t    return output;\n\t  });\n\t\n\t  // decoder\n\t  // [https://gist.github.com/1020396] by [https://github.com/atk]\n\t  object.atob || (\n\t  object.atob = function (input) {\n\t    input = input.replace(/=+$/, '')\n\t    if (input.length % 4 == 1) throw INVALID_CHARACTER_ERR;\n\t    for (\n\t      // initialize result and counters\n\t      var bc = 0, bs, buffer, idx = 0, output = '';\n\t      // get next character\n\t      buffer = input.charAt(idx++);\n\t      // character found in table? initialize bit storage and add its ascii value;\n\t      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n\t        // and if not first of each 4 characters,\n\t        // convert the first 8 bits to one ascii character\n\t        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n\t    ) {\n\t      // try to find character in table (0-63, not found => -1)\n\t      buffer = chars.indexOf(buffer);\n\t    }\n\t    return output;\n\t  });\n\t\n\t}());\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t/**\r\n\t * Expose `Emitter`.\r\n\t */\r\n\t\r\n\tif (true) {\r\n\t  module.exports = Emitter;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialize a new `Emitter`.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction Emitter(obj) {\r\n\t  if (obj) return mixin(obj);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Mixin the emitter properties.\r\n\t *\r\n\t * @param {Object} obj\r\n\t * @return {Object}\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction mixin(obj) {\r\n\t  for (var key in Emitter.prototype) {\r\n\t    obj[key] = Emitter.prototype[key];\r\n\t  }\r\n\t  return obj;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Listen on the given `event` with `fn`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.on =\r\n\tEmitter.prototype.addEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n\t    .push(fn);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds an `event` listener that will be invoked a single\r\n\t * time then automatically removed.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.once = function(event, fn){\r\n\t  function on() {\r\n\t    this.off(event, on);\r\n\t    fn.apply(this, arguments);\r\n\t  }\r\n\t\r\n\t  on.fn = fn;\r\n\t  this.on(event, on);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Remove the given callback for `event` or all\r\n\t * registered callbacks.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.off =\r\n\tEmitter.prototype.removeListener =\r\n\tEmitter.prototype.removeAllListeners =\r\n\tEmitter.prototype.removeEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t\r\n\t  // all\r\n\t  if (0 == arguments.length) {\r\n\t    this._callbacks = {};\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // specific event\r\n\t  var callbacks = this._callbacks['$' + event];\r\n\t  if (!callbacks) return this;\r\n\t\r\n\t  // remove all handlers\r\n\t  if (1 == arguments.length) {\r\n\t    delete this._callbacks['$' + event];\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // remove specific handler\r\n\t  var cb;\r\n\t  for (var i = 0; i < callbacks.length; i++) {\r\n\t    cb = callbacks[i];\r\n\t    if (cb === fn || cb.fn === fn) {\r\n\t      callbacks.splice(i, 1);\r\n\t      break;\r\n\t    }\r\n\t  }\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Emit `event` with the given args.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Mixed} ...\r\n\t * @return {Emitter}\r\n\t */\r\n\t\r\n\tEmitter.prototype.emit = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  var args = [].slice.call(arguments, 1)\r\n\t    , callbacks = this._callbacks['$' + event];\r\n\t\r\n\t  if (callbacks) {\r\n\t    callbacks = callbacks.slice(0);\r\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n\t      callbacks[i].apply(this, args);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Return array of callbacks for `event`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Array}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.listeners = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  return this._callbacks['$' + event] || [];\r\n\t};\r\n\t\r\n\t/**\r\n\t * Check if this emitter has `event` handlers.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Boolean}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.hasListeners = function(event){\r\n\t  return !! this.listeners(event).length;\r\n\t};\r\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Root reference for iframes.\n\t */\n\t\n\tvar root;\n\tif (typeof window !== 'undefined') { // Browser window\n\t  root = window;\n\t} else if (typeof self !== 'undefined') { // Web Worker\n\t  root = self;\n\t} else { // Other environments\n\t  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n\t  root = this;\n\t}\n\t\n\tvar Emitter = __webpack_require__(12);\n\tvar requestBase = __webpack_require__(14);\n\tvar isObject = __webpack_require__(8);\n\t\n\t/**\n\t * Noop.\n\t */\n\t\n\tfunction noop(){};\n\t\n\t/**\n\t * Expose `request`.\n\t */\n\t\n\tvar request = module.exports = __webpack_require__(15).bind(null, Request);\n\t\n\t/**\n\t * Determine XHR.\n\t */\n\t\n\trequest.getXHR = function () {\n\t  if (root.XMLHttpRequest\n\t      && (!root.location || 'file:' != root.location.protocol\n\t          || !root.ActiveXObject)) {\n\t    return new XMLHttpRequest;\n\t  } else {\n\t    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n\t  }\n\t  throw Error(\"Browser-only verison of superagent could not find XHR\");\n\t};\n\t\n\t/**\n\t * Removes leading and trailing whitespace, added to support IE.\n\t *\n\t * @param {String} s\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tvar trim = ''.trim\n\t  ? function(s) { return s.trim(); }\n\t  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\t\n\t/**\n\t * Serialize the given `obj`.\n\t *\n\t * @param {Object} obj\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction serialize(obj) {\n\t  if (!isObject(obj)) return obj;\n\t  var pairs = [];\n\t  for (var key in obj) {\n\t    pushEncodedKeyValuePair(pairs, key, obj[key]);\n\t  }\n\t  return pairs.join('&');\n\t}\n\t\n\t/**\n\t * Helps 'serialize' with serializing arrays.\n\t * Mutates the pairs array.\n\t *\n\t * @param {Array} pairs\n\t * @param {String} key\n\t * @param {Mixed} val\n\t */\n\t\n\tfunction pushEncodedKeyValuePair(pairs, key, val) {\n\t  if (val != null) {\n\t    if (Array.isArray(val)) {\n\t      val.forEach(function(v) {\n\t        pushEncodedKeyValuePair(pairs, key, v);\n\t      });\n\t    } else if (isObject(val)) {\n\t      for(var subkey in val) {\n\t        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n\t      }\n\t    } else {\n\t      pairs.push(encodeURIComponent(key)\n\t        + '=' + encodeURIComponent(val));\n\t    }\n\t  } else if (val === null) {\n\t    pairs.push(encodeURIComponent(key));\n\t  }\n\t}\n\t\n\t/**\n\t * Expose serialization method.\n\t */\n\t\n\t request.serializeObject = serialize;\n\t\n\t /**\n\t  * Parse the given x-www-form-urlencoded `str`.\n\t  *\n\t  * @param {String} str\n\t  * @return {Object}\n\t  * @api private\n\t  */\n\t\n\tfunction parseString(str) {\n\t  var obj = {};\n\t  var pairs = str.split('&');\n\t  var pair;\n\t  var pos;\n\t\n\t  for (var i = 0, len = pairs.length; i < len; ++i) {\n\t    pair = pairs[i];\n\t    pos = pair.indexOf('=');\n\t    if (pos == -1) {\n\t      obj[decodeURIComponent(pair)] = '';\n\t    } else {\n\t      obj[decodeURIComponent(pair.slice(0, pos))] =\n\t        decodeURIComponent(pair.slice(pos + 1));\n\t    }\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Expose parser.\n\t */\n\t\n\trequest.parseString = parseString;\n\t\n\t/**\n\t * Default MIME type map.\n\t *\n\t *     superagent.types.xml = 'application/xml';\n\t *\n\t */\n\t\n\trequest.types = {\n\t  html: 'text/html',\n\t  json: 'application/json',\n\t  xml: 'application/xml',\n\t  urlencoded: 'application/x-www-form-urlencoded',\n\t  'form': 'application/x-www-form-urlencoded',\n\t  'form-data': 'application/x-www-form-urlencoded'\n\t};\n\t\n\t/**\n\t * Default serialization map.\n\t *\n\t *     superagent.serialize['application/xml'] = function(obj){\n\t *       return 'generated xml here';\n\t *     };\n\t *\n\t */\n\t\n\t request.serialize = {\n\t   'application/x-www-form-urlencoded': serialize,\n\t   'application/json': JSON.stringify\n\t };\n\t\n\t /**\n\t  * Default parsers.\n\t  *\n\t  *     superagent.parse['application/xml'] = function(str){\n\t  *       return { object parsed from str };\n\t  *     };\n\t  *\n\t  */\n\t\n\trequest.parse = {\n\t  'application/x-www-form-urlencoded': parseString,\n\t  'application/json': JSON.parse\n\t};\n\t\n\t/**\n\t * Parse the given header `str` into\n\t * an object containing the mapped fields.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction parseHeader(str) {\n\t  var lines = str.split(/\\r?\\n/);\n\t  var fields = {};\n\t  var index;\n\t  var line;\n\t  var field;\n\t  var val;\n\t\n\t  lines.pop(); // trailing CRLF\n\t\n\t  for (var i = 0, len = lines.length; i < len; ++i) {\n\t    line = lines[i];\n\t    index = line.indexOf(':');\n\t    field = line.slice(0, index).toLowerCase();\n\t    val = trim(line.slice(index + 1));\n\t    fields[field] = val;\n\t  }\n\t\n\t  return fields;\n\t}\n\t\n\t/**\n\t * Check if `mime` is json or has +json structured syntax suffix.\n\t *\n\t * @param {String} mime\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isJSON(mime) {\n\t  return /[\\/+]json\\b/.test(mime);\n\t}\n\t\n\t/**\n\t * Return the mime type for the given `str`.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction type(str){\n\t  return str.split(/ *; */).shift();\n\t};\n\t\n\t/**\n\t * Return header field parameters.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction params(str){\n\t  return str.split(/ *; */).reduce(function(obj, str){\n\t    var parts = str.split(/ *= */),\n\t        key = parts.shift(),\n\t        val = parts.shift();\n\t\n\t    if (key && val) obj[key] = val;\n\t    return obj;\n\t  }, {});\n\t};\n\t\n\t/**\n\t * Initialize a new `Response` with the given `xhr`.\n\t *\n\t *  - set flags (.ok, .error, etc)\n\t *  - parse header\n\t *\n\t * Examples:\n\t *\n\t *  Aliasing `superagent` as `request` is nice:\n\t *\n\t *      request = superagent;\n\t *\n\t *  We can use the promise-like API, or pass callbacks:\n\t *\n\t *      request.get('/').end(function(res){});\n\t *      request.get('/', function(res){});\n\t *\n\t *  Sending data can be chained:\n\t *\n\t *      request\n\t *        .post('/user')\n\t *        .send({ name: 'tj' })\n\t *        .end(function(res){});\n\t *\n\t *  Or passed to `.send()`:\n\t *\n\t *      request\n\t *        .post('/user')\n\t *        .send({ name: 'tj' }, function(res){});\n\t *\n\t *  Or passed to `.post()`:\n\t *\n\t *      request\n\t *        .post('/user', { name: 'tj' })\n\t *        .end(function(res){});\n\t *\n\t * Or further reduced to a single call for simple cases:\n\t *\n\t *      request\n\t *        .post('/user', { name: 'tj' }, function(res){});\n\t *\n\t * @param {XMLHTTPRequest} xhr\n\t * @param {Object} options\n\t * @api private\n\t */\n\t\n\tfunction Response(req, options) {\n\t  options = options || {};\n\t  this.req = req;\n\t  this.xhr = this.req.xhr;\n\t  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n\t  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n\t     ? this.xhr.responseText\n\t     : null;\n\t  this.statusText = this.req.xhr.statusText;\n\t  this._setStatusProperties(this.xhr.status);\n\t  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n\t  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n\t  // getResponseHeader still works. so we get content-type even if getting\n\t  // other headers fails.\n\t  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n\t  this._setHeaderProperties(this.header);\n\t  this.body = this.req.method != 'HEAD'\n\t    ? this._parseBody(this.text ? this.text : this.xhr.response)\n\t    : null;\n\t}\n\t\n\t/**\n\t * Get case-insensitive `field` value.\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api public\n\t */\n\t\n\tResponse.prototype.get = function(field){\n\t  return this.header[field.toLowerCase()];\n\t};\n\t\n\t/**\n\t * Set header related properties:\n\t *\n\t *   - `.type` the content type without params\n\t *\n\t * A response of \"Content-Type: text/plain; charset=utf-8\"\n\t * will provide you with a `.type` of \"text/plain\".\n\t *\n\t * @param {Object} header\n\t * @api private\n\t */\n\t\n\tResponse.prototype._setHeaderProperties = function(header){\n\t  // content-type\n\t  var ct = this.header['content-type'] || '';\n\t  this.type = type(ct);\n\t\n\t  // params\n\t  var obj = params(ct);\n\t  for (var key in obj) this[key] = obj[key];\n\t};\n\t\n\t/**\n\t * Parse the given body `str`.\n\t *\n\t * Used for auto-parsing of bodies. Parsers\n\t * are defined on the `superagent.parse` object.\n\t *\n\t * @param {String} str\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tResponse.prototype._parseBody = function(str){\n\t  var parse = request.parse[this.type];\n\t  if (!parse && isJSON(this.type)) {\n\t    parse = request.parse['application/json'];\n\t  }\n\t  return parse && str && (str.length || str instanceof Object)\n\t    ? parse(str)\n\t    : null;\n\t};\n\t\n\t/**\n\t * Set flags such as `.ok` based on `status`.\n\t *\n\t * For example a 2xx response will give you a `.ok` of __true__\n\t * whereas 5xx will be __false__ and `.error` will be __true__. The\n\t * `.clientError` and `.serverError` are also available to be more\n\t * specific, and `.statusType` is the class of error ranging from 1..5\n\t * sometimes useful for mapping respond colors etc.\n\t *\n\t * \"sugar\" properties are also defined for common cases. Currently providing:\n\t *\n\t *   - .noContent\n\t *   - .badRequest\n\t *   - .unauthorized\n\t *   - .notAcceptable\n\t *   - .notFound\n\t *\n\t * @param {Number} status\n\t * @api private\n\t */\n\t\n\tResponse.prototype._setStatusProperties = function(status){\n\t  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\t  if (status === 1223) {\n\t    status = 204;\n\t  }\n\t\n\t  var type = status / 100 | 0;\n\t\n\t  // status / class\n\t  this.status = this.statusCode = status;\n\t  this.statusType = type;\n\t\n\t  // basics\n\t  this.info = 1 == type;\n\t  this.ok = 2 == type;\n\t  this.clientError = 4 == type;\n\t  this.serverError = 5 == type;\n\t  this.error = (4 == type || 5 == type)\n\t    ? this.toError()\n\t    : false;\n\t\n\t  // sugar\n\t  this.accepted = 202 == status;\n\t  this.noContent = 204 == status;\n\t  this.badRequest = 400 == status;\n\t  this.unauthorized = 401 == status;\n\t  this.notAcceptable = 406 == status;\n\t  this.notFound = 404 == status;\n\t  this.forbidden = 403 == status;\n\t};\n\t\n\t/**\n\t * Return an `Error` representative of this response.\n\t *\n\t * @return {Error}\n\t * @api public\n\t */\n\t\n\tResponse.prototype.toError = function(){\n\t  var req = this.req;\n\t  var method = req.method;\n\t  var url = req.url;\n\t\n\t  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n\t  var err = new Error(msg);\n\t  err.status = this.status;\n\t  err.method = method;\n\t  err.url = url;\n\t\n\t  return err;\n\t};\n\t\n\t/**\n\t * Expose `Response`.\n\t */\n\t\n\trequest.Response = Response;\n\t\n\t/**\n\t * Initialize a new `Request` with the given `method` and `url`.\n\t *\n\t * @param {String} method\n\t * @param {String} url\n\t * @api public\n\t */\n\t\n\tfunction Request(method, url) {\n\t  var self = this;\n\t  this._query = this._query || [];\n\t  this.method = method;\n\t  this.url = url;\n\t  this.header = {}; // preserves header name case\n\t  this._header = {}; // coerces header names to lowercase\n\t  this.on('end', function(){\n\t    var err = null;\n\t    var res = null;\n\t\n\t    try {\n\t      res = new Response(self);\n\t    } catch(e) {\n\t      err = new Error('Parser is unable to parse the response');\n\t      err.parse = true;\n\t      err.original = e;\n\t      // issue #675: return the raw response if the response parsing fails\n\t      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n\t      // issue #876: return the http status code if the response parsing fails\n\t      err.statusCode = self.xhr && self.xhr.status ? self.xhr.status : null;\n\t      return self.callback(err);\n\t    }\n\t\n\t    self.emit('response', res);\n\t\n\t    var new_err;\n\t    try {\n\t      if (res.status < 200 || res.status >= 300) {\n\t        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n\t        new_err.original = err;\n\t        new_err.response = res;\n\t        new_err.status = res.status;\n\t      }\n\t    } catch(e) {\n\t      new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android\n\t    }\n\t\n\t    // #1000 don't catch errors from the callback to avoid double calling it\n\t    if (new_err) {\n\t      self.callback(new_err, res);\n\t    } else {\n\t      self.callback(null, res);\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * Mixin `Emitter` and `requestBase`.\n\t */\n\t\n\tEmitter(Request.prototype);\n\tfor (var key in requestBase) {\n\t  Request.prototype[key] = requestBase[key];\n\t}\n\t\n\t/**\n\t * Set Content-Type to `type`, mapping values from `request.types`.\n\t *\n\t * Examples:\n\t *\n\t *      superagent.types.xml = 'application/xml';\n\t *\n\t *      request.post('/')\n\t *        .type('xml')\n\t *        .send(xmlstring)\n\t *        .end(callback);\n\t *\n\t *      request.post('/')\n\t *        .type('application/xml')\n\t *        .send(xmlstring)\n\t *        .end(callback);\n\t *\n\t * @param {String} type\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.type = function(type){\n\t  this.set('Content-Type', request.types[type] || type);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set responseType to `val`. Presently valid responseTypes are 'blob' and\n\t * 'arraybuffer'.\n\t *\n\t * Examples:\n\t *\n\t *      req.get('/')\n\t *        .responseType('blob')\n\t *        .end(callback);\n\t *\n\t * @param {String} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.responseType = function(val){\n\t  this._responseType = val;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Accept to `type`, mapping values from `request.types`.\n\t *\n\t * Examples:\n\t *\n\t *      superagent.types.json = 'application/json';\n\t *\n\t *      request.get('/agent')\n\t *        .accept('json')\n\t *        .end(callback);\n\t *\n\t *      request.get('/agent')\n\t *        .accept('application/json')\n\t *        .end(callback);\n\t *\n\t * @param {String} accept\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.accept = function(type){\n\t  this.set('Accept', request.types[type] || type);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Authorization field value with `user` and `pass`.\n\t *\n\t * @param {String} user\n\t * @param {String} pass\n\t * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.auth = function(user, pass, options){\n\t  if (!options) {\n\t    options = {\n\t      type: 'basic'\n\t    }\n\t  }\n\t\n\t  switch (options.type) {\n\t    case 'basic':\n\t      var str = btoa(user + ':' + pass);\n\t      this.set('Authorization', 'Basic ' + str);\n\t    break;\n\t\n\t    case 'auto':\n\t      this.username = user;\n\t      this.password = pass;\n\t    break;\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t* Add query-string `val`.\n\t*\n\t* Examples:\n\t*\n\t*   request.get('/shoes')\n\t*     .query('size=10')\n\t*     .query({ color: 'blue' })\n\t*\n\t* @param {Object|String} val\n\t* @return {Request} for chaining\n\t* @api public\n\t*/\n\t\n\tRequest.prototype.query = function(val){\n\t  if ('string' != typeof val) val = serialize(val);\n\t  if (val) this._query.push(val);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Queue the given `file` as an attachment to the specified `field`,\n\t * with optional `filename`.\n\t *\n\t * ``` js\n\t * request.post('/upload')\n\t *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n\t *   .end(callback);\n\t * ```\n\t *\n\t * @param {String} field\n\t * @param {Blob|File} file\n\t * @param {String} filename\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.attach = function(field, file, filename){\n\t  this._getFormData().append(field, file, filename || file.name);\n\t  return this;\n\t};\n\t\n\tRequest.prototype._getFormData = function(){\n\t  if (!this._formData) {\n\t    this._formData = new root.FormData();\n\t  }\n\t  return this._formData;\n\t};\n\t\n\t/**\n\t * Invoke the callback with `err` and `res`\n\t * and handle arity check.\n\t *\n\t * @param {Error} err\n\t * @param {Response} res\n\t * @api private\n\t */\n\t\n\tRequest.prototype.callback = function(err, res){\n\t  var fn = this._callback;\n\t  this.clearTimeout();\n\t  fn(err, res);\n\t};\n\t\n\t/**\n\t * Invoke callback with x-domain error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.crossDomainError = function(){\n\t  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n\t  err.crossDomain = true;\n\t\n\t  err.status = this.status;\n\t  err.method = this.method;\n\t  err.url = this.url;\n\t\n\t  this.callback(err);\n\t};\n\t\n\t/**\n\t * Invoke callback with timeout error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype._timeoutError = function(){\n\t  var timeout = this._timeout;\n\t  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n\t  err.timeout = timeout;\n\t  this.callback(err);\n\t};\n\t\n\t/**\n\t * Compose querystring to append to req.url\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype._appendQueryString = function(){\n\t  var query = this._query.join('&');\n\t  if (query) {\n\t    this.url += ~this.url.indexOf('?')\n\t      ? '&' + query\n\t      : '?' + query;\n\t  }\n\t};\n\t\n\t/**\n\t * Initiate request, invoking callback `fn(res)`\n\t * with an instanceof `Response`.\n\t *\n\t * @param {Function} fn\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.end = function(fn){\n\t  var self = this;\n\t  var xhr = this.xhr = request.getXHR();\n\t  var timeout = this._timeout;\n\t  var data = this._formData || this._data;\n\t\n\t  // store callback\n\t  this._callback = fn || noop;\n\t\n\t  // state change\n\t  xhr.onreadystatechange = function(){\n\t    if (4 != xhr.readyState) return;\n\t\n\t    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n\t    // result in the error \"Could not complete the operation due to error c00c023f\"\n\t    var status;\n\t    try { status = xhr.status } catch(e) { status = 0; }\n\t\n\t    if (0 == status) {\n\t      if (self.timedout) return self._timeoutError();\n\t      if (self._aborted) return;\n\t      return self.crossDomainError();\n\t    }\n\t    self.emit('end');\n\t  };\n\t\n\t  // progress\n\t  var handleProgress = function(direction, e) {\n\t    if (e.total > 0) {\n\t      e.percent = e.loaded / e.total * 100;\n\t    }\n\t    e.direction = direction;\n\t    self.emit('progress', e);\n\t  }\n\t  if (this.hasListeners('progress')) {\n\t    try {\n\t      xhr.onprogress = handleProgress.bind(null, 'download');\n\t      if (xhr.upload) {\n\t        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n\t      }\n\t    } catch(e) {\n\t      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n\t      // Reported here:\n\t      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n\t    }\n\t  }\n\t\n\t  // timeout\n\t  if (timeout && !this._timer) {\n\t    this._timer = setTimeout(function(){\n\t      self.timedout = true;\n\t      self.abort();\n\t    }, timeout);\n\t  }\n\t\n\t  // querystring\n\t  this._appendQueryString();\n\t\n\t  // initiate request\n\t  if (this.username && this.password) {\n\t    xhr.open(this.method, this.url, true, this.username, this.password);\n\t  } else {\n\t    xhr.open(this.method, this.url, true);\n\t  }\n\t\n\t  // CORS\n\t  if (this._withCredentials) xhr.withCredentials = true;\n\t\n\t  // body\n\t  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n\t    // serialize stuff\n\t    var contentType = this._header['content-type'];\n\t    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n\t    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n\t    if (serialize) data = serialize(data);\n\t  }\n\t\n\t  // set header fields\n\t  for (var field in this.header) {\n\t    if (null == this.header[field]) continue;\n\t    xhr.setRequestHeader(field, this.header[field]);\n\t  }\n\t\n\t  if (this._responseType) {\n\t    xhr.responseType = this._responseType;\n\t  }\n\t\n\t  // send stuff\n\t  this.emit('request', this);\n\t\n\t  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n\t  // We need null here if data is undefined\n\t  xhr.send(typeof data !== 'undefined' ? data : null);\n\t  return this;\n\t};\n\t\n\t\n\t/**\n\t * Expose `Request`.\n\t */\n\t\n\trequest.Request = Request;\n\t\n\t/**\n\t * GET `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} [data] or fn\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.get = function(url, data, fn){\n\t  var req = request('GET', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.query(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * HEAD `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} [data] or fn\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.head = function(url, data, fn){\n\t  var req = request('HEAD', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * OPTIONS query to `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} [data] or fn\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.options = function(url, data, fn){\n\t  var req = request('OPTIONS', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * DELETE `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tfunction del(url, fn){\n\t  var req = request('DELETE', url);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\trequest['del'] = del;\n\trequest['delete'] = del;\n\t\n\t/**\n\t * PATCH `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} [data]\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.patch = function(url, data, fn){\n\t  var req = request('PATCH', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * POST `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} [data]\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.post = function(url, data, fn){\n\t  var req = request('POST', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * PUT `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} [data] or fn\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.put = function(url, data, fn){\n\t  var req = request('PUT', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module of mixed-in functions shared between node and client code\n\t */\n\tvar isObject = __webpack_require__(8);\n\t\n\t/**\n\t * Clear previous timeout.\n\t *\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.clearTimeout = function _clearTimeout(){\n\t  this._timeout = 0;\n\t  clearTimeout(this._timer);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Override default response body parser\n\t *\n\t * This function will be called to convert incoming data into request.body\n\t *\n\t * @param {Function}\n\t * @api public\n\t */\n\t\n\texports.parse = function parse(fn){\n\t  this._parser = fn;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Override default request body serializer\n\t *\n\t * This function will be called to convert data set via .send or .attach into payload to send\n\t *\n\t * @param {Function}\n\t * @api public\n\t */\n\t\n\texports.serialize = function serialize(fn){\n\t  this._serializer = fn;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set timeout to `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.timeout = function timeout(ms){\n\t  this._timeout = ms;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Promise support\n\t *\n\t * @param {Function} resolve\n\t * @param {Function} reject\n\t * @return {Request}\n\t */\n\t\n\texports.then = function then(resolve, reject) {\n\t  if (!this._fullfilledPromise) {\n\t    var self = this;\n\t    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n\t      self.end(function(err, res){\n\t        if (err) innerReject(err); else innerResolve(res);\n\t      });\n\t    });\n\t  }\n\t  return this._fullfilledPromise.then(resolve, reject);\n\t}\n\t\n\texports.catch = function(cb) {\n\t  return this.then(undefined, cb);\n\t};\n\t\n\t/**\n\t * Allow for extension\n\t */\n\t\n\texports.use = function use(fn) {\n\t  fn(this);\n\t  return this;\n\t}\n\t\n\t\n\t/**\n\t * Get request header `field`.\n\t * Case-insensitive.\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api public\n\t */\n\t\n\texports.get = function(field){\n\t  return this._header[field.toLowerCase()];\n\t};\n\t\n\t/**\n\t * Get case-insensitive header `field` value.\n\t * This is a deprecated internal API. Use `.get(field)` instead.\n\t *\n\t * (getHeader is no longer used internally by the superagent code base)\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api private\n\t * @deprecated\n\t */\n\t\n\texports.getHeader = exports.get;\n\t\n\t/**\n\t * Set header `field` to `val`, or multiple fields with one object.\n\t * Case-insensitive.\n\t *\n\t * Examples:\n\t *\n\t *      req.get('/')\n\t *        .set('Accept', 'application/json')\n\t *        .set('X-API-Key', 'foobar')\n\t *        .end(callback);\n\t *\n\t *      req.get('/')\n\t *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n\t *        .end(callback);\n\t *\n\t * @param {String|Object} field\n\t * @param {String} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.set = function(field, val){\n\t  if (isObject(field)) {\n\t    for (var key in field) {\n\t      this.set(key, field[key]);\n\t    }\n\t    return this;\n\t  }\n\t  this._header[field.toLowerCase()] = val;\n\t  this.header[field] = val;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove header `field`.\n\t * Case-insensitive.\n\t *\n\t * Example:\n\t *\n\t *      req.get('/')\n\t *        .unset('User-Agent')\n\t *        .end(callback);\n\t *\n\t * @param {String} field\n\t */\n\texports.unset = function(field){\n\t  delete this._header[field.toLowerCase()];\n\t  delete this.header[field];\n\t  return this;\n\t};\n\t\n\t/**\n\t * Write the field `name` and `val`, or multiple fields with one object\n\t * for \"multipart/form-data\" request bodies.\n\t *\n\t * ``` js\n\t * request.post('/upload')\n\t *   .field('foo', 'bar')\n\t *   .end(callback);\n\t *\n\t * request.post('/upload')\n\t *   .field({ foo: 'bar', baz: 'qux' })\n\t *   .end(callback);\n\t * ```\n\t *\n\t * @param {String|Object} name\n\t * @param {String|Blob|File|Buffer|fs.ReadStream} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\texports.field = function(name, val) {\n\t\n\t  // name should be either a string or an object.\n\t  if (null === name ||  undefined === name) {\n\t    throw new Error('.field(name, val) name can not be empty');\n\t  }\n\t\n\t  if (isObject(name)) {\n\t    for (var key in name) {\n\t      this.field(key, name[key]);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  // val should be defined now\n\t  if (null === val || undefined === val) {\n\t    throw new Error('.field(name, val) val can not be empty');\n\t  }\n\t  this._getFormData().append(name, val);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Abort the request, and clear potential timeout.\n\t *\n\t * @return {Request}\n\t * @api public\n\t */\n\texports.abort = function(){\n\t  if (this._aborted) {\n\t    return this;\n\t  }\n\t  this._aborted = true;\n\t  this.xhr && this.xhr.abort(); // browser\n\t  this.req && this.req.abort(); // node\n\t  this.clearTimeout();\n\t  this.emit('abort');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Enable transmission of cookies with x-domain requests.\n\t *\n\t * Note that for this to work the origin must not be\n\t * using \"Access-Control-Allow-Origin\" with a wildcard,\n\t * and also must set \"Access-Control-Allow-Credentials\"\n\t * to \"true\".\n\t *\n\t * @api public\n\t */\n\t\n\texports.withCredentials = function(){\n\t  // This is browser-only functionality. Node side is no-op.\n\t  this._withCredentials = true;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set the max redirects to `n`. Does noting in browser XHR implementation.\n\t *\n\t * @param {Number} n\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.redirects = function(n){\n\t  this._maxRedirects = n;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Convert to a plain javascript object (not JSON string) of scalar properties.\n\t * Note as this method is designed to return a useful non-this value,\n\t * it cannot be chained.\n\t *\n\t * @return {Object} describing method, url, and data of this request\n\t * @api public\n\t */\n\t\n\texports.toJSON = function(){\n\t  return {\n\t    method: this.method,\n\t    url: this.url,\n\t    data: this._data,\n\t    headers: this._header\n\t  };\n\t};\n\t\n\t/**\n\t * Check if `obj` is a host object,\n\t * we don't want to serialize these :)\n\t *\n\t * TODO: future proof, move to compoent land\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\texports._isHost = function _isHost(obj) {\n\t  var str = {}.toString.call(obj);\n\t\n\t  switch (str) {\n\t    case '[object File]':\n\t    case '[object Blob]':\n\t    case '[object FormData]':\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n\t * an object is given.\n\t *\n\t * Examples:\n\t *\n\t *       // manual json\n\t *       request.post('/user')\n\t *         .type('json')\n\t *         .send('{\"name\":\"tj\"}')\n\t *         .end(callback)\n\t *\n\t *       // auto json\n\t *       request.post('/user')\n\t *         .send({ name: 'tj' })\n\t *         .end(callback)\n\t *\n\t *       // manual x-www-form-urlencoded\n\t *       request.post('/user')\n\t *         .type('form')\n\t *         .send('name=tj')\n\t *         .end(callback)\n\t *\n\t *       // auto x-www-form-urlencoded\n\t *       request.post('/user')\n\t *         .type('form')\n\t *         .send({ name: 'tj' })\n\t *         .end(callback)\n\t *\n\t *       // defaults to x-www-form-urlencoded\n\t *      request.post('/user')\n\t *        .send('name=tobi')\n\t *        .send('species=ferret')\n\t *        .end(callback)\n\t *\n\t * @param {String|Object} data\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.send = function(data){\n\t  var obj = isObject(data);\n\t  var type = this._header['content-type'];\n\t\n\t  // merge\n\t  if (obj && isObject(this._data)) {\n\t    for (var key in data) {\n\t      this._data[key] = data[key];\n\t    }\n\t  } else if ('string' == typeof data) {\n\t    // default to x-www-form-urlencoded\n\t    if (!type) this.type('form');\n\t    type = this._header['content-type'];\n\t    if ('application/x-www-form-urlencoded' == type) {\n\t      this._data = this._data\n\t        ? this._data + '&' + data\n\t        : data;\n\t    } else {\n\t      this._data = (this._data || '') + data;\n\t    }\n\t  } else {\n\t    this._data = data;\n\t  }\n\t\n\t  if (!obj || this._isHost(data)) return this;\n\t\n\t  // default to json\n\t  if (!type) this.type('json');\n\t  return this;\n\t};\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t// The node and browser modules expose versions of this with the\n\t// appropriate constructor function bound as first argument\n\t/**\n\t * Issue a request:\n\t *\n\t * Examples:\n\t *\n\t *    request('GET', '/users').end(callback)\n\t *    request('/users').end(callback)\n\t *    request('/users', callback)\n\t *\n\t * @param {String} method\n\t * @param {String|Function} url or callback\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tfunction request(RequestConstructor, method, url) {\n\t  // callback\n\t  if ('function' == typeof url) {\n\t    return new RequestConstructor('GET', method).end(url);\n\t  }\n\t\n\t  // url first\n\t  if (2 == arguments.length) {\n\t    return new RequestConstructor('GET', method);\n\t  }\n\t\n\t  return new RequestConstructor(method, url);\n\t}\n\t\n\tmodule.exports = request;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar urljoin = __webpack_require__(1);\n\t\n\tvar objectHelper = __webpack_require__(3);\n\tvar assert = __webpack_require__(2);\n\tvar responseHandler = __webpack_require__(4);\n\t\n\tfunction DBConnection(request, options) {\n\t  this.baseOptions = options;\n\t  this.request = request;\n\t}\n\t\n\tDBConnection.prototype.signup = function (options, cb) {\n\t  var url;\n\t  var body;\n\t\n\t  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n\t    connection: { type: 'string', message: 'connection option is required' },\n\t    email: { type: 'string', message: 'email option is required' },\n\t    password: { type: 'string', message: 'password option is required' }\n\t  });\n\t  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\t\n\t  url = urljoin(this.baseOptions.rootUrl, 'dbconnection', 'signup');\n\t\n\t  body = objectHelper.merge(this.baseOptions, ['clientID'])\n\t                .with(options);\n\t\n\t  body = objectHelper.blacklist(body, ['scope']);\n\t\n\t  body = objectHelper.toSnakeCase(body, ['auth0Client']);\n\t\n\t  return this.request\n\t    .post(url)\n\t    .send(body)\n\t    .end(responseHandler(cb));\n\t};\n\t\n\tDBConnection.prototype.changePassword = function (options, cb) {\n\t  var url;\n\t  var body;\n\t\n\t  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n\t    connection: { type: 'string', message: 'connection option is required' },\n\t    email: { type: 'string', message: 'email option is required' }\n\t  });\n\t  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\t\n\t  url = urljoin(this.baseOptions.rootUrl, 'dbconnection', 'change_password');\n\t\n\t  body = objectHelper.merge(this.baseOptions, ['clientID'])\n\t                .with(options, ['email', 'connection']);\n\t\n\t  body = objectHelper.toSnakeCase(body, ['auth0Client']);\n\t\n\t  return this.request\n\t    .post(url)\n\t    .send(body)\n\t    .end(responseHandler(cb));\n\t};\n\t\n\tmodule.exports = DBConnection;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar urljoin = __webpack_require__(1);\n\t\n\tvar objectHelper = __webpack_require__(3);\n\tvar assert = __webpack_require__(2);\n\tvar qs = __webpack_require__(6);\n\tvar responseHandler = __webpack_require__(4);\n\t\n\tfunction PasswordlessAuthentication(request, options) {\n\t  this.baseOptions = options;\n\t  this.request = request;\n\t}\n\t\n\tPasswordlessAuthentication.prototype.buildVerifyUrl = function (options) {\n\t  var params;\n\t  var qString;\n\t\n\t  /* eslint-disable */\n\t  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n\t    connection: { type: 'string', message: 'connection option is required' },\n\t    type: { type: 'string', message: 'type option is required', values: ['sms', 'email'],\n\t            value_message: 'type is not valid ([email,sms])' },\n\t    verificationCode: { type: 'string', message: 'verificationCode option is required' },\n\t    phoneNumber: { required: true, type: 'string', message: 'phoneNumber option is required',\n\t            condition: function (o) { return o.type === 'sms'; } },\n\t    email: { required: true, type: 'string', message: 'email option is required',\n\t            condition: function (o) { return o.type === 'email'; } }\n\t  });\n\t  /* eslint-enable */\n\t\n\t  assert.check(options, {\n\t    optional: true,\n\t    type: 'object',\n\t    message: 'options parameter is not valid'\n\t  });\n\t\n\t  params = objectHelper.merge(this.baseOptions, [\n\t    'clientID',\n\t    'responseType',\n\t    'redirectUri',\n\t    'scope',\n\t    'audience'\n\t  ]).with(options);\n\t\n\t  params = objectHelper.blacklist(params, ['type']);\n\t\n\t  // eslint-disable-next-line\n\t  if (this.baseOptions._sendTelemetry) {\n\t    params.auth0Client = this.request.getTelemetryData();\n\t  }\n\t\n\t  params = objectHelper.toSnakeCase(params, ['auth0Client']);\n\t\n\t  qString = qs.build(params);\n\t\n\t  return urljoin(this.baseOptions.rootUrl, 'passwordless', 'verify_redirect', '?' + qString);\n\t};\n\t\n\tPasswordlessAuthentication.prototype.start = function (options, cb) {\n\t  var url;\n\t  var body;\n\t  var cleanOption;\n\t\n\t  /* eslint-disable */\n\t  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n\t    connection: { type: 'string', message: 'connection option is required' },\n\t    type: { type: 'string', message: 'type option is required', values: ['sms', 'email'],\n\t            value_message: 'type is not valid ([email,sms])' },\n\t    phoneNumber: { required: true, type: 'string', message: 'phoneNumber option is required',\n\t            condition: function (o) { return o.type === 'sms'; } },\n\t    email: { required: true, type: 'string', message: 'email option is required',\n\t            condition: function (o) { return o.type === 'email'; } }\n\t  });\n\t  /* eslint-enable */\n\t\n\t  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\t\n\t  cleanOption = objectHelper.blacklist(options, ['type']);\n\t\n\t  url = urljoin(this.baseOptions.rootUrl, 'passwordless', 'start');\n\t\n\t  body = objectHelper.merge(this.baseOptions, ['clientID'])\n\t                .with(cleanOption);\n\t\n\t  body = objectHelper.toSnakeCase(body, ['auth0Client']);\n\t\n\t  return this.request\n\t    .post(url)\n\t    .send(body)\n\t    .end(responseHandler(cb));\n\t};\n\t\n\tPasswordlessAuthentication.prototype.verify = function (options, cb) {\n\t  var url;\n\t  var cleanOption;\n\t\n\t  /* eslint-disable */\n\t  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n\t    connection: { type: 'string', message: 'connection option is required' },\n\t    type: { type: 'string', message: 'type option is required', values: ['sms', 'email'],\n\t            value_message: 'type is not valid ([email,sms])' },\n\t    verificationCode: { type: 'string', message: 'verificationCode option is required' },\n\t    phoneNumber: { required: true, type: 'string', message: 'phoneNumber option is required',\n\t            condition: function (o) { return o.type === 'sms'; } },\n\t    email: { required: true, type: 'string', message: 'email option is required',\n\t            condition: function (o) { return o.type === 'email'; } }\n\t  });\n\t  /* eslint-enable */\n\t\n\t  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\t\n\t  cleanOption = objectHelper.blacklist(options, ['type']);\n\t\n\t  cleanOption = objectHelper.toSnakeCase(cleanOption, ['auth0Client']);\n\t\n\t  url = urljoin(this.baseOptions.rootUrl, 'passwordless', 'verify');\n\t\n\t  return this.request\n\t    .post(url)\n\t    .send(cleanOption)\n\t    .end(responseHandler(cb));\n\t};\n\t\n\tmodule.exports = PasswordlessAuthentication;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\tfunction buildResponse(error, description) {\n\t  return {\n\t    error: error,\n\t    error_description: description\n\t  };\n\t}\n\t\n\tfunction invalidJwt(description) {\n\t  return buildResponse('invalid_token', description);\n\t}\n\t\n\tmodule.exports = {\n\t  buildResponse: buildResponse,\n\t  invalidJwt: invalidJwt\n\t};\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar windowHelper = __webpack_require__(5);\n\t\n\tfunction IframeHandler(options) {\n\t  this.auth0 = options.auth0;\n\t  this.url = options.url;\n\t  this.callback = options.callback;\n\t  this.timeout = options.timeout || 60 * 1000;\n\t  this.timeoutCallback = options.timeoutCallback || null;\n\t  this.usePostMessage = options.usePostMessage || false;\n\t  this.iframe = null;\n\t  this.timeoutHandle = null;\n\t  this._destroyTimeout = null;\n\t  this.transientMessageEventListener = null;\n\t  this.transientEventListener = null;\n\t}\n\t\n\tIframeHandler.prototype.init = function () {\n\t  var _this = this;\n\t  var _window = windowHelper.getWindow();\n\t\n\t  this.iframe = _window.document.createElement('iframe');\n\t  this.iframe.style.display = 'none';\n\t  this.iframe.src = this.url;\n\t\n\t  if (this.usePostMessage) {\n\t    // Workaround to avoid using bind that does not work in IE8\n\t    this.transientMessageEventListener = function (e) {\n\t      _this.messageEventListener(e);\n\t    };\n\t\n\t    _window.addEventListener('message', this.transientMessageEventListener, false);\n\t  } else {\n\t    // Workaround to avoid using bind that does not work in IE8\n\t    this.transientEventListener = function () {\n\t      _this.loadEventListener();\n\t    };\n\t\n\t    this.iframe.addEventListener('load', this.transientEventListener, false);\n\t  }\n\t\n\t  _window.document.body.appendChild(this.iframe);\n\t\n\t  this.timeoutHandle = setTimeout(function () {\n\t    _this.timeoutHandler();\n\t  }, this.timeout);\n\t};\n\t\n\tIframeHandler.prototype.messageEventListener = function (e) {\n\t  this.destroy();\n\t  this.callbackHandler(e.data);\n\t};\n\t\n\tIframeHandler.prototype.loadEventListener = function () {\n\t  var result = this.auth0.parseHash(this.iframe.contentWindow.location.hash);\n\t  if (!result) {\n\t    return;\n\t  }\n\t\n\t  this.destroy();\n\t  this.callbackHandler(result);\n\t};\n\t\n\tIframeHandler.prototype.callbackHandler = function (result) {\n\t  var error = null;\n\t\n\t  if (result.error) {\n\t    error = result;\n\t    result = null;\n\t  }\n\t\n\t  this.callback(error, result);\n\t};\n\t\n\tIframeHandler.prototype.timeoutHandler = function () {\n\t  this.destroy();\n\t  if (this.timeoutCallback) {\n\t    this.timeoutCallback();\n\t  }\n\t};\n\t\n\tIframeHandler.prototype.destroy = function () {\n\t  var _this = this;\n\t\n\t  clearTimeout(this.timeoutHandle);\n\t\n\t  this._destroyTimeout = setTimeout(function () {\n\t    var _window = windowHelper.getWindow();\n\t    if (_this.usePostMessage) {\n\t      _window.removeEventListener('message', _this.transientMessageEventListener, false);\n\t    } else {\n\t      _this.iframe.removeEventListener('load', _this.transientEventListener, false);\n\t    }\n\t    _window.document.body.removeChild(_this.iframe);\n\t  }, 0);\n\t};\n\t\n\tmodule.exports = IframeHandler;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\tfunction error(message) {\n\t  console.error(message);\n\t}\n\t\n\tmodule.exports = {\n\t  error: error\n\t};\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar base64Url = __webpack_require__(10);\n\t\n\tfunction getPayload(jwt) {\n\t  var encoded = jwt && jwt.split('.')[1];\n\t  return JSON.parse(base64Url.decode(encoded));\n\t}\n\t\n\tmodule.exports = {\n\t  getPayload: getPayload\n\t};\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar urljoin = __webpack_require__(1);\n\t\n\tvar RequestBuilder = __webpack_require__(7);\n\tvar assert = __webpack_require__(2);\n\tvar responseHandler = __webpack_require__(4);\n\t\n\tfunction Management(options) {\n\t  /* eslint-disable */\n\t  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n\t    domain: { type: 'string', message: 'domain option is required' },\n\t    token: { type: 'string', message: 'token option is required' },\n\t    _sendTelemetry: { optional: true, type: 'boolean', message: '_sendTelemetry option is not valid' },\n\t    _telemetryInfo: { optional: true, type: 'object', message: '_telemetryInfo option is not valid' }\n\t  });\n\t  /* eslint-enable */\n\t\n\t  this.baseOptions = options;\n\t\n\t  this.baseOptions.headers = { Authorization: 'Bearer ' + this.baseOptions.token };\n\t\n\t  this.request = new RequestBuilder(this.baseOptions);\n\t  this.baseOptions.rootUrl = urljoin('https://' + this.baseOptions.domain, 'api', 'v2');\n\t}\n\t\n\tManagement.prototype.getUser = function (userId, cb) {\n\t  var url;\n\t\n\t  assert.check(userId, { type: 'string', message: 'userId parameter is not valid' });\n\t  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\t\n\t  url = urljoin(this.baseOptions.rootUrl, 'users', userId);\n\t\n\t  return this.request\n\t    .get(url)\n\t    .end(responseHandler(cb));\n\t};\n\t\n\tManagement.prototype.patchUserMetadata = function (userId, userMetadata, cb) {\n\t  var url;\n\t\n\t  assert.check(userId, { type: 'string', message: 'userId parameter is not valid' });\n\t  assert.check(userMetadata, { type: 'object', message: 'userMetadata parameter is not valid' });\n\t  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\t\n\t  url = urljoin(this.baseOptions.rootUrl, 'users', userId);\n\t\n\t  return this.request\n\t    .patch(url)\n\t    .send({ user_metadata: userMetadata })\n\t    .end(responseHandler(cb));\n\t};\n\t\n\tManagement.prototype.linkUser = function (userId, secondaryUserToken, cb) {\n\t  var url;\n\t  /* eslint-disable */\n\t  assert.check(userId, { type: 'string', message: 'userId parameter is not valid' });\n\t  assert.check(secondaryUserToken, { type: 'string',\n\t    message: 'secondaryUserToken parameter is not valid' });\n\t  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\t  /* eslint-enable */\n\t\n\t  url = urljoin(this.baseOptions.rootUrl, 'users', userId, 'identities');\n\t\n\t  return this.request\n\t    .post(url)\n\t    .send({ link_with: secondaryUserToken })\n\t    .end(responseHandler(cb));\n\t};\n\t\n\tmodule.exports = Management;\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tmodule.exports = { raw: '8.0.0' };\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar assert = __webpack_require__(2);\n\tvar error = __webpack_require__(18);\n\tvar jwt = __webpack_require__(21);\n\tvar qs = __webpack_require__(6);\n\tvar windowHelper = __webpack_require__(5);\n\tvar objectHelper = __webpack_require__(3);\n\tvar Authentication = __webpack_require__(9);\n\tvar Redirect = __webpack_require__(25);\n\tvar SilentAuthenticationHandler = __webpack_require__(26);\n\tvar windowHelper = __webpack_require__(5);\n\t\n\tfunction WebAuth(options) {\n\t  /* eslint-disable */\n\t  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n\t    domain: { type: 'string', message: 'domain option is required' },\n\t    clientID: { type: 'string', message: 'clientID option is required' },\n\t    responseType: { type: 'string', message: 'responseType is not valid' },\n\t    redirectUri: { type: 'string', message: 'redirectUri is not valid' },\n\t    scope: { optional: true, type: 'string', message: 'audience is not valid' },\n\t    audience: { optional: true, type: 'string', message: 'scope is not valid' },\n\t    tenant: { optional: true, type: 'string', message: 'tenant option is not valid. Required when using custom domains.' },\n\t    _sendTelemetry: { optional: true, type: 'boolean', message: '_sendTelemetry option is not valid' },\n\t    _telemetryInfo: { optional: true, type: 'object', message: '_telemetryInfo option is not valid' }\n\t  });\n\t  /* eslint-enable */\n\t\n\t  this.baseOptions = options;\n\t\n\t  this.baseOptions._sendTelemetry = this.baseOptions._sendTelemetry === false ?\n\t                                        this.baseOptions._sendTelemetry : true;\n\t\n\t  this.baseOptions.tenant = this.baseOptions.domain.split('.')[0];\n\t\n\t  this.client = new Authentication(this.baseOptions);\n\t  this.redirect = new Redirect(this.client, this.baseOptions);\n\t}\n\t\n\tWebAuth.prototype.parseHash = function (hash) {\n\t  var parsedQs;\n\t  var err;\n\t  var prof;\n\t  var audiences;\n\t\n\t  var _window = windowHelper.getWindow();\n\t\n\t  var hashStr = hash || _window.location.hash;\n\t  hashStr = hashStr.replace(/^#?\\/?/, '');\n\t\n\t  parsedQs = qs.parse(hashStr);\n\t\n\t  if (parsedQs.hasOwnProperty('error')) {\n\t    err = error.buildResponse(parsedQs.error, parsedQs.error_description);\n\t\n\t    if (parsedQs.state) {\n\t      err.state = parsedQs.state;\n\t    }\n\t\n\t    return err;\n\t  }\n\t\n\t  if (!parsedQs.hasOwnProperty('access_token')\n\t       && !parsedQs.hasOwnProperty('id_token')\n\t       && !parsedQs.hasOwnProperty('refresh_token')) {\n\t    return null;\n\t  }\n\t\n\t  if (parsedQs.id_token) {\n\t    prof = jwt.getPayload(parsedQs.id_token);\n\t    // aud should be the clientID\n\t    audiences = assert.isArray(prof.aud) ? prof.aud : [prof.aud];\n\t    if (audiences.indexOf(this.baseOptions.clientID) === -1) {\n\t      return error.invalidJwt(\n\t        'The clientID configured (' + this.baseOptions.clientID + ') does not match ' +\n\t        'with the clientID set in the token (' + audiences.join(', ') + ').');\n\t    }\n\t\n\t    // iss should be the Auth0 domain (i.e.: https://contoso.auth0.com/)\n\t    if (prof.iss && prof.iss !== 'https://' + this.baseOptions.domain + '/') {\n\t      return error.invalidJwt(\n\t        'The domain configured (https://' + this.baseOptions.domain + '/) does not match ' +\n\t        'with the domain set in the token (' + prof.iss + ').');\n\t    }\n\t  }\n\t\n\t  return {\n\t    accessToken: parsedQs.access_token,\n\t    idToken: parsedQs.id_token,\n\t    idTokenPayload: prof,\n\t    refreshToken: parsedQs.refresh_token,\n\t    state: parsedQs.state\n\t  };\n\t};\n\t\n\tWebAuth.prototype.renewAuth = function (options, cb) {\n\t  var handler;\n\t  var usePostMessage = !!options.usePostMessage;\n\t\n\t  var params = objectHelper.merge(this.baseOptions, [\n\t    'clientID',\n\t    'redirectUri',\n\t    'responseType',\n\t    'scope',\n\t    'audience'\n\t  ]).with(options);\n\t\n\t  assert.check(params, { type: 'object', message: 'options parameter is not valid' }, {\n\t    scope: { type: 'string', message: 'scope option is required' },\n\t    audience: { type: 'string', message: 'audience option is required' }\n\t  });\n\t  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\t\n\t  params.prompt = 'none';\n\t\n\t  params = objectHelper.blacklist(params, ['usePostMessage', 'tenant']);\n\t\n\t  params = objectHelper.toSnakeCase(params, ['auth0Client']);\n\t\n\t  handler = new SilentAuthenticationHandler(this, this.client.buildAuthorizeUrl(params));\n\t  handler.login(usePostMessage, cb);\n\t};\n\t\n\tWebAuth.prototype.changePassword = function (options, cb) {\n\t  return this.client.dbConnection.changePassword(options, cb);\n\t};\n\t\n\tWebAuth.prototype.passwordlessStart = function (options, cb) {\n\t  return this.client.passwordless.start(options, cb);\n\t};\n\t\n\tWebAuth.prototype.signup = function (options, cb) {\n\t  return this.client.dbConnection.signup(options, cb);\n\t};\n\t\n\tWebAuth.prototype.login = function (options) {\n\t  windowHelper.redirect(this.client.buildAuthorizeUrl(options));\n\t};\n\t\n\tWebAuth.prototype.logout = function (options) {\n\t  windowHelper.redirect(this.client.buildLogoutUrl(options));\n\t};\n\t\n\tWebAuth.prototype.passwordlessVerify = function (options, cb) {\n\t  var _this = this;\n\t  return this.client.passwordless.verify(options, function (err) {\n\t    if (err) {\n\t      return cb(err);\n\t    }\n\t    windowHelper.redirect(_this.client.passwordless.buildVerifyUrl(options));\n\t  });\n\t};\n\t\n\t\n\t// popup.login\n\t// popup.authorize\n\t// popup.passwordlessVerify\n\t// popup.signupAndLogin\n\t\n\tmodule.exports = WebAuth;\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar windowHelper = __webpack_require__(5);\n\tvar UsernamePassword = __webpack_require__(27);\n\t\n\tfunction Redirect(client, options) {\n\t  this.baseOptions = options;\n\t  this.client = client;\n\t}\n\t\n\tRedirect.prototype.login = function (options, cb) {\n\t  var usernamePassword = new UsernamePassword(this.baseOptions);\n\t  return usernamePassword.login(options, function (err, data) {\n\t    if (err) {\n\t      return cb(err);\n\t    }\n\t    usernamePassword.callback(data, {});\n\t  });\n\t};\n\t\n\tRedirect.prototype.signupAndLogin = function (options, cb) {\n\t  var _this = this;\n\t  return this.client.dbConnection.signup(options, function (err) {\n\t    if (err) {\n\t      return cb(err);\n\t    }\n\t    _this.login(options, cb);\n\t  });\n\t};\n\t\n\tmodule.exports = Redirect;\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar information = __webpack_require__(20);\n\tvar IframeHandler = __webpack_require__(19);\n\t\n\tfunction SilentAuthenticationHandler(auth0, authenticationUrl, timeout) {\n\t  this.auth0 = auth0;\n\t  this.authenticationUrl = authenticationUrl;\n\t  this.timeout = timeout || 60 * 1000;\n\t  this.handler = null;\n\t}\n\t\n\tSilentAuthenticationHandler.prototype.timeoutCallback = function () {\n\t  information.error('Timeout during authentication renew.');\n\t};\n\t\n\tSilentAuthenticationHandler.prototype.login = function (usePostMessage, callback) {\n\t  this.handler = new IframeHandler({\n\t    auth0: this.auth0,\n\t    url: this.authenticationUrl,\n\t    callback: callback,\n\t    timeout: this.timeout,\n\t    timeoutCallback: this.timeoutCallback,\n\t    usePostMessage: usePostMessage || false\n\t  });\n\t\n\t  this.handler.init();\n\t};\n\t\n\tmodule.exports = SilentAuthenticationHandler;\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar urljoin = __webpack_require__(1);\n\t\n\tvar objectHelper = __webpack_require__(3);\n\tvar RequestBuilder = __webpack_require__(7);\n\tvar responseHandler = __webpack_require__(4);\n\tvar windowHelper = __webpack_require__(5);\n\t\n\tfunction UsernamePassword(options) {\n\t  this.baseOptions = options;\n\t  this.request = new RequestBuilder(options);\n\t}\n\t\n\tUsernamePassword.prototype.login = function (options, cb) {\n\t  var url;\n\t  var body;\n\t\n\t  url = urljoin(this.baseOptions.rootUrl, 'usernamepassword', 'login');\n\t\n\t  options.username = options.username || options.email; // eslint-disable-line\n\t\n\t  options = objectHelper.blacklist(options, ['email']); // eslint-disable-line\n\t\n\t  body = objectHelper.merge(this.baseOptions, [\n\t    'clientID',\n\t    'redirectUri',\n\t    'tenant',\n\t    'responseType',\n\t    'scope',\n\t    'audience'\n\t  ]).with(options);\n\t\n\t  body = objectHelper.toSnakeCase(body, ['auth0Client']);\n\t\n\t  return this.request\n\t    .post(url)\n\t    .send(body)\n\t    .end(responseHandler(cb));\n\t};\n\t\n\tUsernamePassword.prototype.callback = function (formHtml, options) {\n\t  var div;\n\t  var form;\n\t  var _document = windowHelper.getDocument();\n\t\n\t  div = _document.createElement('div');\n\t  div.innerHTML = formHtml;\n\t  form = _document.body.appendChild(div).children[0];\n\t\n\t  form.submit();\n\t};\n\t\n\tmodule.exports = UsernamePassword;\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// auth0.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 14e71692ff47a5cb413c","var Authentication = require('./authentication');\nvar Management = require('./management');\nvar WebAuth = require('./web-auth');\n\nmodule.exports = {\n  Authentication: Authentication,\n  Management: Management,\n  WebAuth: WebAuth\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 0\n// module chunks = 0","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (str, options) {\n\n    // make sure protocol is followed by two slashes\n    str = str.replace(/:\\//g, '://');\n\n    // remove consecutive slashes\n    str = str.replace(/([^:\\s])\\/+/g, '$1/');\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    str = str.replace(/(\\?.+)\\?/g, '$1&');\n\n    return str;\n  }\n\n  return function () {\n    var input = arguments;\n    var options = {};\n\n    if (typeof arguments[0] === 'object') {\n      // new syntax with array and options\n      input = arguments[0];\n      options = arguments[1] || {};\n    }\n\n    var joined = [].slice.call(input, 0).join('/');\n    return normalize(joined, options);\n  };\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/url-join/lib/url-join.js\n// module id = 1\n// module chunks = 0","var toString = Object.prototype.toString;\n\nfunction attribute(o, attr, type, text) {\n  if (o && typeof o[attr] !== type) {\n    throw new Error(text);\n  }\n}\n\nfunction variable(o, type, text) {\n  if (typeof o !== type) {\n    throw new Error(text);\n  }\n}\n\nfunction value(o, values, text) {\n  if (values.indexOf(o) === -1) {\n    throw new Error(text);\n  }\n}\n\nfunction check(o, config, attributes) {\n  if (!config.optional || o) {\n    variable(o, config.type, config.message);\n  }\n  if (config.type === 'object' && attributes) {\n    Object.keys(attributes).forEach(function (a) { // eslint-disable-line\n      if (!attributes[a].optional || o[a]) {\n        if (!attributes[a].condition || attributes[a].condition(o)) {\n          attribute(o, a, attributes[a].type, attributes[a].message);\n          if (attributes[a].values) {\n            value(o[a], attributes[a].values, attributes[a].value_message);\n          }\n        }\n      }\n    });\n  }\n}\n\n/**\n * Wrap `Array.isArray` Polyfill for IE9\n * source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\n *\n * @param {Array} array\n * @public\n */\nfunction isArray(array) {\n  if (this.supportsIsArray()) {\n    return Array.isArray(array);\n  }\n\n  return toString.call(array) === '[object Array]';\n}\n\nfunction supportsIsArray() {\n  return (Array.isArray != null);\n}\n\nmodule.exports = {\n  check: check,\n  attribute: attribute,\n  variable: variable,\n  value: value,\n  isArray: isArray,\n  supportsIsArray: supportsIsArray\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/helper/assert.js\n// module id = 2\n// module chunks = 0","/* eslint-disable no-param-reassign */\n\nfunction pick(object, keys) {\n  return keys.reduce(function (prev, key) {\n    if (object[key]) {\n      prev[key] = object[key];\n    }\n    return prev;\n  }, {});\n}\n\nfunction extend() {\n  var params = Array.from(arguments);\n  params.unshift({});\n  return Object.assign.apply(undefined, params);\n}\n\nfunction merge(object, keys) {\n  return {\n    base: keys ? pick(object, keys) : object,\n    with: function (object2, keys2) {\n      object2 = keys2 ? pick(object2, keys2) : object2;\n      return extend(this.base, object2);\n    }\n  };\n}\n\nfunction blacklist(object, blacklistedKeys) {\n  return Object.keys(object).reduce(function (p, key) {\n    if (blacklistedKeys.indexOf(key) === -1) {\n      p[key] = object[key];\n    }\n    return p;\n  }, {});\n}\n\nfunction camelToSnake(str) {\n  var newKey = '';\n  var index = 0;\n  var code;\n  var wasPrevNumber = true;\n  var wasPrevUppercase = true;\n\n  while (index < str.length) {\n    code = str.charCodeAt(index);\n    if ((!wasPrevUppercase && code >= 65 && code <= 90) || (!wasPrevNumber && code >= 48 && code <= 57)) {\n      newKey += '_';\n      newKey += str[index].toLowerCase();\n    } else {\n      newKey += str[index].toLowerCase();\n    }\n    wasPrevNumber = (code >= 48 && code <= 57);\n    wasPrevUppercase = (code >= 65 && code <= 90);\n    index++;\n  }\n\n  return newKey;\n}\n\nfunction toSnakeCase(object, exceptions) {\n  exceptions = exceptions || [];\n\n  return Object.keys(object).reduce(function (p, key) {\n    var newKey = exceptions.indexOf(key) === -1 ? camelToSnake(key) : key;\n    p[newKey] = object[key];\n    return p;\n  }, {});\n}\n\nmodule.exports = {\n  toSnakeCase: toSnakeCase,\n  blacklist: blacklist,\n  merge: merge,\n  pick: pick,\n  extend: extend\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/helper/object.js\n// module id = 3\n// module chunks = 0","function wrapCallback(cb) {\n  return function (err, data) {\n\n    if (err) {\n      var data = {\n        original: err\n      };\n\n      if (err.response && err.response.statusCode) {\n        data.status_code = err.response.statusCode;\n      }\n\n      if (err.response && err.response.statusText) {\n        data.status_text = err.response.statusText;\n      }\n\n      if (err.response && err.response.body) {\n        err = err.response.body;\n      }\n\n      data.code = err.error || err.code || err.error_code || null;\n      data.description = err.error_description || err.description || err.error || null;\n      data.name = err.name || null;\n\n      return cb(data);\n    }\n\n    return cb(null, data.body || data.text);\n  };\n}\n\nmodule.exports = wrapCallback;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/helper/response-handler.js\n// module id = 4\n// module chunks = 0","function redirect(url) {\n  global.window.location = url;\n}\n\nfunction getDocument() {\n  return global.window.document;\n}\n\nfunction getWindow() {\n  return global.window;\n}\n\nmodule.exports = {\n  redirect: redirect,\n  getDocument: getDocument,\n  getWindow: getWindow,\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/helper/window.js\n// module id = 5\n// module chunks = 0","function build(params) {\n  return Object.keys(params).reduce(function (arr, key) {\n    if (typeof params[key] !== 'undefined') {\n      arr.push(key + '=' + encodeURIComponent(params[key]));\n    }\n    return arr;\n  }, []).join('&');\n}\n\nfunction parse(qs) {\n  return qs.split('&').reduce(function (prev, curr) {\n    var param = curr.split('=');\n    prev[param[0]] = param[1];\n    return prev;\n  }, {});\n}\n\nmodule.exports = {\n  build: build,\n  parse: parse\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/helper/qs.js\n// module id = 6\n// module chunks = 0","/* eslint-disable no-param-reassign */\nvar request = require('superagent');\nvar base64Url = require('./base64_url');\nvar version = require('../version');\n\n// ------------------------------------------------ RequestWrapper\n\nfunction RequestWrapper(req) {\n  this.request = req;\n  this.method = req.method;\n  this.url = req.url;\n  this.body = req._data;\n  this.headers = req._header;\n}\n\nRequestWrapper.prototype.abort = function () {\n  this.request.abort();\n};\n\nRequestWrapper.prototype.getMethod = function () {\n  return this.method;\n};\n\nRequestWrapper.prototype.getBody = function () {\n  return this.body;\n};\n\nRequestWrapper.prototype.getUrl = function () {\n  return this.url;\n};\n\nRequestWrapper.prototype.getHeaders = function () {\n  return this.headers;\n};\n\n// ------------------------------------------------ RequestObj\n\nfunction RequestObj(req) {\n  this.request = req;\n}\n\nRequestObj.prototype.set = function (key, value) {\n  this.request = this.request.set(key, value);\n  return this;\n};\n\nRequestObj.prototype.send = function (body) {\n  this.request = this.request.send(body);\n  return this;\n};\n\nRequestObj.prototype.end = function (cb) {\n  this.request = this.request.end(cb);\n  return new RequestWrapper(this.request);\n};\n\n// ------------------------------------------------ RequestBuilder\n\nfunction RequestBuilder(options) {\n  this._sendTelemetry = options._sendTelemetry === false ? options._sendTelemetry : true;\n  this._telemetryInfo = options._telemetryInfo || null;\n  this.headers = options.headers || {};\n}\n\nRequestBuilder.prototype.setCommonConfiguration = function (ongoingRequest) {\n  var headers = this.headers;\n  ongoingRequest = ongoingRequest.set('Content-Type', 'application/json');\n  Object.keys(this.headers).forEach(function (header) {\n    ongoingRequest = ongoingRequest.set(header, headers[header]);\n  });\n  if (this._sendTelemetry) {\n    ongoingRequest = ongoingRequest.set('Auth0-Client', this.getTelemetryData());\n  }\n  return ongoingRequest;\n};\n\nRequestBuilder.prototype.getTelemetryData = function () {\n  var clientInfo = this._telemetryInfo || { name: 'auth0.js', version: version.raw };\n  var jsonClientInfo = JSON.stringify(clientInfo);\n  return base64Url.encode(jsonClientInfo);\n};\n\nRequestBuilder.prototype.get = function (url) {\n  return new RequestObj(this.setCommonConfiguration(request.get(url)));\n};\n\nRequestBuilder.prototype.post = function (url) {\n  return new RequestObj(this.setCommonConfiguration(request.post(url)));\n};\n\nRequestBuilder.prototype.patch = function (url) {\n  return new RequestObj(this.setCommonConfiguration(request.patch(url)));\n};\n\nmodule.exports = RequestBuilder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/helper/request-builder.js\n// module id = 7\n// module chunks = 0","/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/is-object.js\n// module id = 8\n// module chunks = 0","var urljoin = require('url-join');\n\nvar RequestBuilder = require('../helper/request-builder');\nvar qs = require('../helper/qs');\nvar objectHelper = require('../helper/object');\nvar assert = require('../helper/assert');\nvar responseHandler = require('../helper/response-handler');\n\nvar PasswordlessAuthentication = require('./passwordless-authentication');\nvar DBConnection = require('./db-connection');\n\nfunction Authentication(options) {\n  /* eslint-disable */\n  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n    domain: { type: 'string', message: 'domain option is required' },\n    clientID: { type: 'string', message: 'clientID option is required' },\n    responseType: { optional: true, type: 'string', message: 'responseType is not valid' },\n    redirectUri: { optional: true, type: 'string', message: 'redirectUri is not valid' },\n    scope: { optional: true, type: 'string', message: 'scope is not valid' },\n    audience: { optional: true, type: 'string', message: 'audience is not valid' },\n    _sendTelemetry: { optional: true, type: 'boolean', message: '_sendTelemetry option is not valid' },\n    _telemetryInfo: { optional: true, type: 'object', message: '_telemetryInfo option is not valid' }\n  });\n  /* eslint-enable */\n\n  this.baseOptions = options;\n\n  this.baseOptions._sendTelemetry = this.baseOptions._sendTelemetry === false ?\n                                        this.baseOptions._sendTelemetry : true;\n\n  this.baseOptions.rootUrl = 'https://' + this.baseOptions.domain;\n\n  this.request = new RequestBuilder(this.baseOptions);\n\n  this.passwordless = new PasswordlessAuthentication(this.request, this.baseOptions);\n  this.dbConnection = new DBConnection(this.request, this.baseOptions);\n}\n\nAuthentication.prototype.buildAuthorizeUrl = function (options) {\n  var params;\n  var qString;\n\n  assert.check(options, {\n    optional: true,\n    type: 'object',\n    message: 'options parameter is not valid'\n  });\n\n  params = objectHelper.merge(this.baseOptions, [\n    'clientID',\n    'responseType',\n    'redirectUri',\n    'scope',\n    'audience'\n  ]).with(options || {});\n\n  // eslint-disable-next-line\n  if (this.baseOptions._sendTelemetry) {\n    params.auth0Client = this.request.getTelemetryData();\n  }\n\n  params = objectHelper.toSnakeCase(params, ['auth0Client']);\n\n  qString = qs.build(params);\n\n  return urljoin(this.baseOptions.rootUrl, 'authorize', '?' + qString);\n};\n\nAuthentication.prototype.buildLogoutUrl = function (options) {\n  var params;\n  var qString;\n\n  assert.check(options, {\n    optional: true,\n    type: 'object',\n    message: 'options parameter is not valid'\n  });\n\n  params = objectHelper.merge(this.baseOptions, ['clientID'])\n                .with(options || {});\n\n  // eslint-disable-next-line\n  if (this.baseOptions._sendTelemetry) {\n    params.auth0Client = this.request.getTelemetryData();\n  }\n\n  params = objectHelper.toSnakeCase(params, ['auth0Client', 'returnTo']);\n\n  qString = qs.build(params);\n\n  return urljoin(this.baseOptions.rootUrl, 'v2', 'logout', '?' + qString);\n};\n\nAuthentication.prototype.login = function (options, cb) {\n  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n    clientID: { optional: true, type: 'string', message: 'clientID option is required' },\n    username: { optional: true, type: 'string', message: 'username option is required' },\n    password: { optional: true, type: 'string', message: 'password option is required' },\n    scope: { optional: true, type: 'string', message: 'scope option is required' },\n    audience: { optional: true, type: 'string', message: 'audience option is required' }\n  });\n  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\n  options.grantType = 'password';\n\n  return this.oauthToken(options, cb);\n};\n\nAuthentication.prototype.oauthToken = function (options, cb) {\n  var url;\n  var body;\n\n  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n    grantType: { optional: true, type: 'string', message: 'grantType option is required' }\n  });\n  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\n  url = urljoin(this.baseOptions.rootUrl, 'oauth', 'token');\n\n  body = objectHelper.merge(this.baseOptions, [\n    'clientID',\n    'scope',\n    'audience'\n  ]).with(options);\n\n  body = objectHelper.toSnakeCase(body, ['auth0Client']);\n\n  body.grant_type = body.grant_type || 'password';\n\n  return this.request\n    .post(url)\n    .send(body)\n    .end(responseHandler(cb));\n};\n\nAuthentication.prototype.loginWithResourceOwner = function (options, cb) {\n  var url;\n  var body;\n\n  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n    username: { type: 'string', message: 'username option is required' },\n    password: { type: 'string', message: 'password option is required' },\n    connection: { type: 'string', message: 'connection option is required' },\n    scope: { optional: true, type: 'string', message: 'scope option is required' },\n    audience: { optional: true, type: 'string', message: 'audience option is required' }\n  });\n  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\n  url = urljoin(this.baseOptions.rootUrl, 'oauth', 'ro');\n\n  body = objectHelper.merge(this.baseOptions, [\n    'clientID',\n    'scope',\n    'audience'\n  ]).with(options);\n\n  body = objectHelper.toSnakeCase(body, ['auth0Client']);\n\n  body.grant_type = body.grant_type || 'password';\n\n  return this.request\n    .post(url)\n    .send(body)\n    .end(responseHandler(cb));\n};\n\nAuthentication.prototype.userInfo = function (accessToken, cb) {\n  var url;\n\n  assert.check(accessToken, { type: 'string', message: 'accessToken parameter is not valid' });\n  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\n  url = urljoin(this.baseOptions.rootUrl, 'userinfo');\n\n  return this.request\n    .get(url)\n    .set('Authorization', 'Bearer ' + accessToken)\n    .end(responseHandler(cb));\n};\n\nAuthentication.prototype.delegation = function (options, cb) {\n  var url;\n  var body;\n\n  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n    grant_type: { type: 'string', message: 'grant_type option is required' }\n  });\n  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\n  url = urljoin(this.baseOptions.rootUrl, 'delegation');\n\n  body = objectHelper.merge(this.baseOptions, ['clientID'])\n                .with(options);\n\n  body = objectHelper.toSnakeCase(body, ['auth0Client']);\n\n  return this.request\n    .post(url)\n    .send(body)\n    .end(responseHandler(cb));\n};\n\nmodule.exports = Authentication;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/authentication/index.js\n// module id = 9\n// module chunks = 0","var Base64 = require('Base64');\n\nfunction encode(str) {\n  return Base64.btoa(str)\n      .replace(/\\+/g, '-') // Convert '+' to '-'\n      .replace(/\\//g, '_') // Convert '/' to '_'\n      .replace(/=+$/, ''); // Remove ending '='\n}\n\n\nfunction decode(str) {\n  // Add removed at end '='\n  str += Array(5 - str.length % 4).join('=');\n\n  str = str\n    .replace(/\\-/g, '+') // Convert '-' to '+'\n    .replace(/_/g, '/'); // Convert '_' to '/'\n\n  return Base64.atob(str);\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/helper/base64_url.js\n// module id = 10\n// module chunks = 0",";(function () {\n\n  var\n    object = typeof exports != 'undefined' ? exports : this, // #8: web workers\n    chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n    INVALID_CHARACTER_ERR = (function () {\n      // fabricate a suitable error object\n      try { document.createElement('$'); }\n      catch (error) { return error; }}());\n\n  // encoder\n  // [https://gist.github.com/999166] by [https://github.com/nignag]\n  object.btoa || (\n  object.btoa = function (input) {\n    for (\n      // initialize result and counter\n      var block, charCode, idx = 0, map = chars, output = '';\n      // if the next input index does not exist:\n      //   change the mapping table to \"=\"\n      //   check if d has no fractional digits\n      input.charAt(idx | 0) || (map = '=', idx % 1);\n      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n    ) {\n      charCode = input.charCodeAt(idx += 3/4);\n      if (charCode > 0xFF) throw INVALID_CHARACTER_ERR;\n      block = block << 8 | charCode;\n    }\n    return output;\n  });\n\n  // decoder\n  // [https://gist.github.com/1020396] by [https://github.com/atk]\n  object.atob || (\n  object.atob = function (input) {\n    input = input.replace(/=+$/, '')\n    if (input.length % 4 == 1) throw INVALID_CHARACTER_ERR;\n    for (\n      // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0, output = '';\n      // get next character\n      buffer = input.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  });\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/Base64/base64.js\n// module id = 11\n// module chunks = 0","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-emitter/index.js\n// module id = 12\n// module chunks = 0","/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = require('emitter');\nvar requestBase = require('./request-base');\nvar isObject = require('./is-object');\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = module.exports = require('./request').bind(null, Request);\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only verison of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(function(v) {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for(var subkey in val) {\n        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return str.split(/ *; */).reduce(function(obj, str){\n    var parts = str.split(/ *= */),\n        key = parts.shift(),\n        val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  this._setStatusProperties(this.xhr.status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n  this.body = this.req.method != 'HEAD'\n    ? this._parseBody(this.text ? this.text : this.xhr.response)\n    : null;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype._setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str){\n  var parse = request.parse[this.type];\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype._setStatusProperties = function(status){\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = this.statusCode = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n      // issue #876: return the http status code if the response parsing fails\n      err.statusCode = self.xhr && self.xhr.status ? self.xhr.status : null;\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    var new_err;\n    try {\n      if (res.status < 200 || res.status >= 300) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n        new_err.original = err;\n        new_err.response = res;\n        new_err.status = res.status;\n      }\n    } catch(e) {\n      new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `requestBase`.\n */\n\nEmitter(Request.prototype);\nfor (var key in requestBase) {\n  Request.prototype[key] = requestBase[key];\n}\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set responseType to `val`. Presently valid responseTypes are 'blob' and\n * 'arraybuffer'.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (!options) {\n    options = {\n      type: 'basic'\n    }\n  }\n\n  switch (options.type) {\n    case 'basic':\n      var str = btoa(user + ':' + pass);\n      this.set('Authorization', 'Basic ' + str);\n    break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n    break;\n  }\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `filename`.\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String} filename\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, filename){\n  this._getFormData().append(field, file, filename || file.name);\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype._timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\n\nRequest.prototype._appendQueryString = function(){\n  var query = this._query.join('&');\n  if (query) {\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var timeout = this._timeout;\n  var data = this._formData || this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (0 == status) {\n      if (self.timedout) return self._timeoutError();\n      if (self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = direction;\n    self.emit('progress', e);\n  }\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.onprogress = handleProgress.bind(null, 'download');\n      if (xhr.upload) {\n        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n      }\n    } catch(e) {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.timedout = true;\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  this._appendQueryString();\n\n  // initiate request\n  if (this.username && this.password) {\n    xhr.open(this.method, this.url, true, this.username, this.password);\n  } else {\n    xhr.open(this.method, this.url, true);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn){\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/client.js\n// module id = 13\n// module chunks = 0","/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nexports.clearTimeout = function _clearTimeout(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nexports.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nexports.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nexports.timeout = function timeout(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} reject\n * @return {Request}\n */\n\nexports.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    var self = this;\n    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n      self.end(function(err, res){\n        if (err) innerReject(err); else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n}\n\nexports.catch = function(cb) {\n  return this.then(undefined, cb);\n};\n\n/**\n * Allow for extension\n */\n\nexports.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nexports.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nexports.getHeader = exports.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nexports.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nexports.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nexports.field = function(name, val) {\n\n  // name should be either a string or an object.\n  if (null === name ||  undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (isObject(name)) {\n    for (var key in name) {\n      this.field(key, name[key]);\n    }\n    return this;\n  }\n\n  // val should be defined now\n  if (null === val || undefined === val) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nexports.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nexports.withCredentials = function(){\n  // This is browser-only functionality. Node side is no-op.\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nexports.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nexports.toJSON = function(){\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nexports._isHost = function _isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nexports.send = function(data){\n  var obj = isObject(data);\n  var type = this._header['content-type'];\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj || this._isHost(data)) return this;\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/request-base.js\n// module id = 14\n// module chunks = 0","// The node and browser modules expose versions of this with the\n// appropriate constructor function bound as first argument\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(RequestConstructor, method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new RequestConstructor('GET', method).end(url);\n  }\n\n  // url first\n  if (2 == arguments.length) {\n    return new RequestConstructor('GET', method);\n  }\n\n  return new RequestConstructor(method, url);\n}\n\nmodule.exports = request;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/request.js\n// module id = 15\n// module chunks = 0","var urljoin = require('url-join');\n\nvar objectHelper = require('../helper/object');\nvar assert = require('../helper/assert');\nvar responseHandler = require('../helper/response-handler');\n\nfunction DBConnection(request, options) {\n  this.baseOptions = options;\n  this.request = request;\n}\n\nDBConnection.prototype.signup = function (options, cb) {\n  var url;\n  var body;\n\n  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n    connection: { type: 'string', message: 'connection option is required' },\n    email: { type: 'string', message: 'email option is required' },\n    password: { type: 'string', message: 'password option is required' }\n  });\n  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\n  url = urljoin(this.baseOptions.rootUrl, 'dbconnection', 'signup');\n\n  body = objectHelper.merge(this.baseOptions, ['clientID'])\n                .with(options);\n\n  body = objectHelper.blacklist(body, ['scope']);\n\n  body = objectHelper.toSnakeCase(body, ['auth0Client']);\n\n  return this.request\n    .post(url)\n    .send(body)\n    .end(responseHandler(cb));\n};\n\nDBConnection.prototype.changePassword = function (options, cb) {\n  var url;\n  var body;\n\n  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n    connection: { type: 'string', message: 'connection option is required' },\n    email: { type: 'string', message: 'email option is required' }\n  });\n  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\n  url = urljoin(this.baseOptions.rootUrl, 'dbconnection', 'change_password');\n\n  body = objectHelper.merge(this.baseOptions, ['clientID'])\n                .with(options, ['email', 'connection']);\n\n  body = objectHelper.toSnakeCase(body, ['auth0Client']);\n\n  return this.request\n    .post(url)\n    .send(body)\n    .end(responseHandler(cb));\n};\n\nmodule.exports = DBConnection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/authentication/db-connection.js\n// module id = 16\n// module chunks = 0","var urljoin = require('url-join');\n\nvar objectHelper = require('../helper/object');\nvar assert = require('../helper/assert');\nvar qs = require('../helper/qs');\nvar responseHandler = require('../helper/response-handler');\n\nfunction PasswordlessAuthentication(request, options) {\n  this.baseOptions = options;\n  this.request = request;\n}\n\nPasswordlessAuthentication.prototype.buildVerifyUrl = function (options) {\n  var params;\n  var qString;\n\n  /* eslint-disable */\n  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n    connection: { type: 'string', message: 'connection option is required' },\n    type: { type: 'string', message: 'type option is required', values: ['sms', 'email'],\n            value_message: 'type is not valid ([email,sms])' },\n    verificationCode: { type: 'string', message: 'verificationCode option is required' },\n    phoneNumber: { required: true, type: 'string', message: 'phoneNumber option is required',\n            condition: function (o) { return o.type === 'sms'; } },\n    email: { required: true, type: 'string', message: 'email option is required',\n            condition: function (o) { return o.type === 'email'; } }\n  });\n  /* eslint-enable */\n\n  assert.check(options, {\n    optional: true,\n    type: 'object',\n    message: 'options parameter is not valid'\n  });\n\n  params = objectHelper.merge(this.baseOptions, [\n    'clientID',\n    'responseType',\n    'redirectUri',\n    'scope',\n    'audience'\n  ]).with(options);\n\n  params = objectHelper.blacklist(params, ['type']);\n\n  // eslint-disable-next-line\n  if (this.baseOptions._sendTelemetry) {\n    params.auth0Client = this.request.getTelemetryData();\n  }\n\n  params = objectHelper.toSnakeCase(params, ['auth0Client']);\n\n  qString = qs.build(params);\n\n  return urljoin(this.baseOptions.rootUrl, 'passwordless', 'verify_redirect', '?' + qString);\n};\n\nPasswordlessAuthentication.prototype.start = function (options, cb) {\n  var url;\n  var body;\n  var cleanOption;\n\n  /* eslint-disable */\n  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n    connection: { type: 'string', message: 'connection option is required' },\n    type: { type: 'string', message: 'type option is required', values: ['sms', 'email'],\n            value_message: 'type is not valid ([email,sms])' },\n    phoneNumber: { required: true, type: 'string', message: 'phoneNumber option is required',\n            condition: function (o) { return o.type === 'sms'; } },\n    email: { required: true, type: 'string', message: 'email option is required',\n            condition: function (o) { return o.type === 'email'; } }\n  });\n  /* eslint-enable */\n\n  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\n  cleanOption = objectHelper.blacklist(options, ['type']);\n\n  url = urljoin(this.baseOptions.rootUrl, 'passwordless', 'start');\n\n  body = objectHelper.merge(this.baseOptions, ['clientID'])\n                .with(cleanOption);\n\n  body = objectHelper.toSnakeCase(body, ['auth0Client']);\n\n  return this.request\n    .post(url)\n    .send(body)\n    .end(responseHandler(cb));\n};\n\nPasswordlessAuthentication.prototype.verify = function (options, cb) {\n  var url;\n  var cleanOption;\n\n  /* eslint-disable */\n  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n    connection: { type: 'string', message: 'connection option is required' },\n    type: { type: 'string', message: 'type option is required', values: ['sms', 'email'],\n            value_message: 'type is not valid ([email,sms])' },\n    verificationCode: { type: 'string', message: 'verificationCode option is required' },\n    phoneNumber: { required: true, type: 'string', message: 'phoneNumber option is required',\n            condition: function (o) { return o.type === 'sms'; } },\n    email: { required: true, type: 'string', message: 'email option is required',\n            condition: function (o) { return o.type === 'email'; } }\n  });\n  /* eslint-enable */\n\n  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\n  cleanOption = objectHelper.blacklist(options, ['type']);\n\n  cleanOption = objectHelper.toSnakeCase(cleanOption, ['auth0Client']);\n\n  url = urljoin(this.baseOptions.rootUrl, 'passwordless', 'verify');\n\n  return this.request\n    .post(url)\n    .send(cleanOption)\n    .end(responseHandler(cb));\n};\n\nmodule.exports = PasswordlessAuthentication;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/authentication/passwordless-authentication.js\n// module id = 17\n// module chunks = 0","function buildResponse(error, description) {\n  return {\n    error: error,\n    error_description: description\n  };\n}\n\nfunction invalidJwt(description) {\n  return buildResponse('invalid_token', description);\n}\n\nmodule.exports = {\n  buildResponse: buildResponse,\n  invalidJwt: invalidJwt\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/helper/error.js\n// module id = 18\n// module chunks = 0","var windowHelper = require('../helper/window');\n\nfunction IframeHandler(options) {\n  this.auth0 = options.auth0;\n  this.url = options.url;\n  this.callback = options.callback;\n  this.timeout = options.timeout || 60 * 1000;\n  this.timeoutCallback = options.timeoutCallback || null;\n  this.usePostMessage = options.usePostMessage || false;\n  this.iframe = null;\n  this.timeoutHandle = null;\n  this._destroyTimeout = null;\n  this.transientMessageEventListener = null;\n  this.transientEventListener = null;\n}\n\nIframeHandler.prototype.init = function () {\n  var _this = this;\n  var _window = windowHelper.getWindow();\n\n  this.iframe = _window.document.createElement('iframe');\n  this.iframe.style.display = 'none';\n  this.iframe.src = this.url;\n\n  if (this.usePostMessage) {\n    // Workaround to avoid using bind that does not work in IE8\n    this.transientMessageEventListener = function (e) {\n      _this.messageEventListener(e);\n    };\n\n    _window.addEventListener('message', this.transientMessageEventListener, false);\n  } else {\n    // Workaround to avoid using bind that does not work in IE8\n    this.transientEventListener = function () {\n      _this.loadEventListener();\n    };\n\n    this.iframe.addEventListener('load', this.transientEventListener, false);\n  }\n\n  _window.document.body.appendChild(this.iframe);\n\n  this.timeoutHandle = setTimeout(function () {\n    _this.timeoutHandler();\n  }, this.timeout);\n};\n\nIframeHandler.prototype.messageEventListener = function (e) {\n  this.destroy();\n  this.callbackHandler(e.data);\n};\n\nIframeHandler.prototype.loadEventListener = function () {\n  var result = this.auth0.parseHash(this.iframe.contentWindow.location.hash);\n  if (!result) {\n    return;\n  }\n\n  this.destroy();\n  this.callbackHandler(result);\n};\n\nIframeHandler.prototype.callbackHandler = function (result) {\n  var error = null;\n\n  if (result.error) {\n    error = result;\n    result = null;\n  }\n\n  this.callback(error, result);\n};\n\nIframeHandler.prototype.timeoutHandler = function () {\n  this.destroy();\n  if (this.timeoutCallback) {\n    this.timeoutCallback();\n  }\n};\n\nIframeHandler.prototype.destroy = function () {\n  var _this = this;\n\n  clearTimeout(this.timeoutHandle);\n\n  this._destroyTimeout = setTimeout(function () {\n    var _window = windowHelper.getWindow();\n    if (_this.usePostMessage) {\n      _window.removeEventListener('message', _this.transientMessageEventListener, false);\n    } else {\n      _this.iframe.removeEventListener('load', _this.transientEventListener, false);\n    }\n    _window.document.body.removeChild(_this.iframe);\n  }, 0);\n};\n\nmodule.exports = IframeHandler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/helper/iframe-handler.js\n// module id = 19\n// module chunks = 0","function error(message) {\n  console.error(message);\n}\n\nmodule.exports = {\n  error: error\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/helper/information.js\n// module id = 20\n// module chunks = 0","var base64Url = require('./base64_url');\n\nfunction getPayload(jwt) {\n  var encoded = jwt && jwt.split('.')[1];\n  return JSON.parse(base64Url.decode(encoded));\n}\n\nmodule.exports = {\n  getPayload: getPayload\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/helper/jwt.js\n// module id = 21\n// module chunks = 0","var urljoin = require('url-join');\n\nvar RequestBuilder = require('../helper/request-builder');\nvar assert = require('../helper/assert');\nvar responseHandler = require('../helper/response-handler');\n\nfunction Management(options) {\n  /* eslint-disable */\n  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n    domain: { type: 'string', message: 'domain option is required' },\n    token: { type: 'string', message: 'token option is required' },\n    _sendTelemetry: { optional: true, type: 'boolean', message: '_sendTelemetry option is not valid' },\n    _telemetryInfo: { optional: true, type: 'object', message: '_telemetryInfo option is not valid' }\n  });\n  /* eslint-enable */\n\n  this.baseOptions = options;\n\n  this.baseOptions.headers = { Authorization: 'Bearer ' + this.baseOptions.token };\n\n  this.request = new RequestBuilder(this.baseOptions);\n  this.baseOptions.rootUrl = urljoin('https://' + this.baseOptions.domain, 'api', 'v2');\n}\n\nManagement.prototype.getUser = function (userId, cb) {\n  var url;\n\n  assert.check(userId, { type: 'string', message: 'userId parameter is not valid' });\n  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\n  url = urljoin(this.baseOptions.rootUrl, 'users', userId);\n\n  return this.request\n    .get(url)\n    .end(responseHandler(cb));\n};\n\nManagement.prototype.patchUserMetadata = function (userId, userMetadata, cb) {\n  var url;\n\n  assert.check(userId, { type: 'string', message: 'userId parameter is not valid' });\n  assert.check(userMetadata, { type: 'object', message: 'userMetadata parameter is not valid' });\n  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\n  url = urljoin(this.baseOptions.rootUrl, 'users', userId);\n\n  return this.request\n    .patch(url)\n    .send({ user_metadata: userMetadata })\n    .end(responseHandler(cb));\n};\n\nManagement.prototype.linkUser = function (userId, secondaryUserToken, cb) {\n  var url;\n  /* eslint-disable */\n  assert.check(userId, { type: 'string', message: 'userId parameter is not valid' });\n  assert.check(secondaryUserToken, { type: 'string',\n    message: 'secondaryUserToken parameter is not valid' });\n  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n  /* eslint-enable */\n\n  url = urljoin(this.baseOptions.rootUrl, 'users', userId, 'identities');\n\n  return this.request\n    .post(url)\n    .send({ link_with: secondaryUserToken })\n    .end(responseHandler(cb));\n};\n\nmodule.exports = Management;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/management/index.js\n// module id = 22\n// module chunks = 0","module.exports = { raw: '8.0.0' };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/version.js\n// module id = 23\n// module chunks = 0","var assert = require('../helper/assert');\nvar error = require('../helper/error');\nvar jwt = require('../helper/jwt');\nvar qs = require('../helper/qs');\nvar windowHelper = require('../helper/window');\nvar objectHelper = require('../helper/object');\nvar Authentication = require('../authentication');\nvar Redirect = require('./redirect');\nvar SilentAuthenticationHandler = require('./silent-authentication-handler');\nvar windowHelper = require('../helper/window');\n\nfunction WebAuth(options) {\n  /* eslint-disable */\n  assert.check(options, { type: 'object', message: 'options parameter is not valid' }, {\n    domain: { type: 'string', message: 'domain option is required' },\n    clientID: { type: 'string', message: 'clientID option is required' },\n    responseType: { type: 'string', message: 'responseType is not valid' },\n    redirectUri: { type: 'string', message: 'redirectUri is not valid' },\n    scope: { optional: true, type: 'string', message: 'audience is not valid' },\n    audience: { optional: true, type: 'string', message: 'scope is not valid' },\n    tenant: { optional: true, type: 'string', message: 'tenant option is not valid. Required when using custom domains.' },\n    _sendTelemetry: { optional: true, type: 'boolean', message: '_sendTelemetry option is not valid' },\n    _telemetryInfo: { optional: true, type: 'object', message: '_telemetryInfo option is not valid' }\n  });\n  /* eslint-enable */\n\n  this.baseOptions = options;\n\n  this.baseOptions._sendTelemetry = this.baseOptions._sendTelemetry === false ?\n                                        this.baseOptions._sendTelemetry : true;\n\n  this.baseOptions.tenant = this.baseOptions.domain.split('.')[0];\n\n  this.client = new Authentication(this.baseOptions);\n  this.redirect = new Redirect(this.client, this.baseOptions);\n}\n\nWebAuth.prototype.parseHash = function (hash) {\n  var parsedQs;\n  var err;\n  var prof;\n  var audiences;\n\n  var _window = windowHelper.getWindow();\n\n  var hashStr = hash || _window.location.hash;\n  hashStr = hashStr.replace(/^#?\\/?/, '');\n\n  parsedQs = qs.parse(hashStr);\n\n  if (parsedQs.hasOwnProperty('error')) {\n    err = error.buildResponse(parsedQs.error, parsedQs.error_description);\n\n    if (parsedQs.state) {\n      err.state = parsedQs.state;\n    }\n\n    return err;\n  }\n\n  if (!parsedQs.hasOwnProperty('access_token')\n       && !parsedQs.hasOwnProperty('id_token')\n       && !parsedQs.hasOwnProperty('refresh_token')) {\n    return null;\n  }\n\n  if (parsedQs.id_token) {\n    prof = jwt.getPayload(parsedQs.id_token);\n    // aud should be the clientID\n    audiences = assert.isArray(prof.aud) ? prof.aud : [prof.aud];\n    if (audiences.indexOf(this.baseOptions.clientID) === -1) {\n      return error.invalidJwt(\n        'The clientID configured (' + this.baseOptions.clientID + ') does not match ' +\n        'with the clientID set in the token (' + audiences.join(', ') + ').');\n    }\n\n    // iss should be the Auth0 domain (i.e.: https://contoso.auth0.com/)\n    if (prof.iss && prof.iss !== 'https://' + this.baseOptions.domain + '/') {\n      return error.invalidJwt(\n        'The domain configured (https://' + this.baseOptions.domain + '/) does not match ' +\n        'with the domain set in the token (' + prof.iss + ').');\n    }\n  }\n\n  return {\n    accessToken: parsedQs.access_token,\n    idToken: parsedQs.id_token,\n    idTokenPayload: prof,\n    refreshToken: parsedQs.refresh_token,\n    state: parsedQs.state\n  };\n};\n\nWebAuth.prototype.renewAuth = function (options, cb) {\n  var handler;\n  var usePostMessage = !!options.usePostMessage;\n\n  var params = objectHelper.merge(this.baseOptions, [\n    'clientID',\n    'redirectUri',\n    'responseType',\n    'scope',\n    'audience'\n  ]).with(options);\n\n  assert.check(params, { type: 'object', message: 'options parameter is not valid' }, {\n    scope: { type: 'string', message: 'scope option is required' },\n    audience: { type: 'string', message: 'audience option is required' }\n  });\n  assert.check(cb, { type: 'function', message: 'cb parameter is not valid' });\n\n  params.prompt = 'none';\n\n  params = objectHelper.blacklist(params, ['usePostMessage', 'tenant']);\n\n  params = objectHelper.toSnakeCase(params, ['auth0Client']);\n\n  handler = new SilentAuthenticationHandler(this, this.client.buildAuthorizeUrl(params));\n  handler.login(usePostMessage, cb);\n};\n\nWebAuth.prototype.changePassword = function (options, cb) {\n  return this.client.dbConnection.changePassword(options, cb);\n};\n\nWebAuth.prototype.passwordlessStart = function (options, cb) {\n  return this.client.passwordless.start(options, cb);\n};\n\nWebAuth.prototype.signup = function (options, cb) {\n  return this.client.dbConnection.signup(options, cb);\n};\n\nWebAuth.prototype.login = function (options) {\n  windowHelper.redirect(this.client.buildAuthorizeUrl(options));\n};\n\nWebAuth.prototype.logout = function (options) {\n  windowHelper.redirect(this.client.buildLogoutUrl(options));\n};\n\nWebAuth.prototype.passwordlessVerify = function (options, cb) {\n  var _this = this;\n  return this.client.passwordless.verify(options, function (err) {\n    if (err) {\n      return cb(err);\n    }\n    windowHelper.redirect(_this.client.passwordless.buildVerifyUrl(options));\n  });\n};\n\n\n// popup.login\n// popup.authorize\n// popup.passwordlessVerify\n// popup.signupAndLogin\n\nmodule.exports = WebAuth;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/web-auth/index.js\n// module id = 24\n// module chunks = 0","var windowHelper = require('../helper/window');\nvar UsernamePassword = require('./username-password');\n\nfunction Redirect(client, options) {\n  this.baseOptions = options;\n  this.client = client;\n}\n\nRedirect.prototype.login = function (options, cb) {\n  var usernamePassword = new UsernamePassword(this.baseOptions);\n  return usernamePassword.login(options, function (err, data) {\n    if (err) {\n      return cb(err);\n    }\n    usernamePassword.callback(data, {});\n  });\n};\n\nRedirect.prototype.signupAndLogin = function (options, cb) {\n  var _this = this;\n  return this.client.dbConnection.signup(options, function (err) {\n    if (err) {\n      return cb(err);\n    }\n    _this.login(options, cb);\n  });\n};\n\nmodule.exports = Redirect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/web-auth/redirect.js\n// module id = 25\n// module chunks = 0","var information = require('../helper/information');\nvar IframeHandler = require('../helper/iframe-handler');\n\nfunction SilentAuthenticationHandler(auth0, authenticationUrl, timeout) {\n  this.auth0 = auth0;\n  this.authenticationUrl = authenticationUrl;\n  this.timeout = timeout || 60 * 1000;\n  this.handler = null;\n}\n\nSilentAuthenticationHandler.prototype.timeoutCallback = function () {\n  information.error('Timeout during authentication renew.');\n};\n\nSilentAuthenticationHandler.prototype.login = function (usePostMessage, callback) {\n  this.handler = new IframeHandler({\n    auth0: this.auth0,\n    url: this.authenticationUrl,\n    callback: callback,\n    timeout: this.timeout,\n    timeoutCallback: this.timeoutCallback,\n    usePostMessage: usePostMessage || false\n  });\n\n  this.handler.init();\n};\n\nmodule.exports = SilentAuthenticationHandler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/web-auth/silent-authentication-handler.js\n// module id = 26\n// module chunks = 0","var urljoin = require('url-join');\n\nvar objectHelper = require('../helper/object');\nvar RequestBuilder = require('../helper/request-builder');\nvar responseHandler = require('../helper/response-handler');\nvar windowHelper = require('../helper/window');\n\nfunction UsernamePassword(options) {\n  this.baseOptions = options;\n  this.request = new RequestBuilder(options);\n}\n\nUsernamePassword.prototype.login = function (options, cb) {\n  var url;\n  var body;\n\n  url = urljoin(this.baseOptions.rootUrl, 'usernamepassword', 'login');\n\n  options.username = options.username || options.email; // eslint-disable-line\n\n  options = objectHelper.blacklist(options, ['email']); // eslint-disable-line\n\n  body = objectHelper.merge(this.baseOptions, [\n    'clientID',\n    'redirectUri',\n    'tenant',\n    'responseType',\n    'scope',\n    'audience'\n  ]).with(options);\n\n  body = objectHelper.toSnakeCase(body, ['auth0Client']);\n\n  return this.request\n    .post(url)\n    .send(body)\n    .end(responseHandler(cb));\n};\n\nUsernamePassword.prototype.callback = function (formHtml, options) {\n  var div;\n  var form;\n  var _document = windowHelper.getDocument();\n\n  div = _document.createElement('div');\n  div.innerHTML = formHtml;\n  form = _document.body.appendChild(div).children[0];\n\n  form.submit();\n};\n\nmodule.exports = UsernamePassword;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/web-auth/username-password.js\n// module id = 27\n// module chunks = 0"],"sourceRoot":""}